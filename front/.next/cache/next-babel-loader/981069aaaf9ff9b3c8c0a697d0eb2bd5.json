{"ast":null,"code":"import produce from '../util/produce'; //bucket 더미 데이터\n\nvar dummyData = [{\n  id: 1,\n  date: \"2021-01-01\",\n  title: \"오랜만에 공장알바 1일차\",\n  content: '다 이 어 트'\n}, {\n  id: 2,\n  date: \"2021-01-08\",\n  title: \"ㅏㅇ아ㅏㅇ아아아ㅏ아\",\n  content: '미칠가기ㅣ닝미이밍'\n}];\nexport var initialState = {\n  post: {}\n};\nexport var LOAD_DIARY_REQUEST = 'LOAD_DIARY_REQUEST'; // 액션의 이름\n\nexport var LOAD_DIARY_SUCCESS = 'LOAD_DIARY_SUCCESS'; // 액션의 이름\n\nexport var LOAD_DIARY_FAILURE = 'LOAD_DIARY_FAILURE'; // 액션의 이름\n\nexport var ADD_DIARY_REQUEST = 'ADD_DIARY_REQUEST'; // 액션의 이름\n\nexport var ADD_DIARY_SUCCESS = 'ADD_DIARY_SUCCESS'; // 액션의 이름\n\nexport var ADD_DIARY_FAILURE = 'ADD_DIARY_FAILURE'; // 액션의 이름\n\nexport var REMOVE_DIARY_REQUEST = 'REMOVE_DIARY_REQUEST'; // 액션의 이름\n\nexport var REMOVE_DIARY_SUCCESS = 'REMOVE_DIARY_SUCCESS'; // 액션의 이름\n\nexport var REMOVE_DIARY_FAILURE = 'REMOVE_DIARY_FAILURE'; // 액션의 이름\n\nexport var LOG_OUT_REQUEST = 'LOG_OUT_REQUEST'; // 액션의 이름\n\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS'; // 액션의 이름\n\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'; // 액션의 이름\n//현재는 REQUEST에서 SUCCESS역활까지 하고있음, saga작성 시 구분하기!\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOAD_DIARY_REQUEST:\n        {\n          //현재는 더미데이터에서 찾아서 넣고있지만 디비 작업시\n          //백엔드에서 해당 데이터 찾아와 바로 넣기\n          var tempdata = dummyData.filter(function (v) {\n            return v.date === action.data;\n          })[0];\n          draft.post.id = tempdata.id;\n          draft.post.title = tempdata.title;\n          draft.post.content = tempdata.content;\n          draft.post.date = tempdata.date;\n          break;\n        }\n\n      case ADD_DIARY_REQUEST:\n        {\n          draft.post.push(action.data);\n          break;\n        }\n\n      case REMOVE_DIARY_REQUEST:\n        {\n          //현재는 더미데이터에서 삭제하지만 디비 작업시 디비에서 삭제\n          draft.dummyData = dummyData.filter(function (v) {\n            return v.id !== action.data.id;\n          });\n          break;\n        }\n\n      case LOG_OUT_REQUEST:\n        {\n          console.log(\"LOG_OUT_REQUEST\");\n          draft.post = null;\n          break;\n        }\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/sol/google/Project/SolarSeed/front/reducers/diary.js"],"names":["produce","dummyData","id","date","title","content","initialState","post","LOAD_DIARY_REQUEST","LOAD_DIARY_SUCCESS","LOAD_DIARY_FAILURE","ADD_DIARY_REQUEST","ADD_DIARY_SUCCESS","ADD_DIARY_FAILURE","REMOVE_DIARY_REQUEST","REMOVE_DIARY_SUCCESS","REMOVE_DIARY_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","reducer","state","action","draft","type","tempdata","filter","v","data","push","console","log"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB,C,CAEA;;AAEA,IAAMC,SAAS,GAAG,CAAC;AACfC,EAAAA,EAAE,EAAE,CADW;AAEfC,EAAAA,IAAI,EAAE,YAFS;AAGfC,EAAAA,KAAK,EAAE,eAHQ;AAIfC,EAAAA,OAAO,EAAE;AAJM,CAAD,EAKf;AACCH,EAAAA,EAAE,EAAE,CADL;AAECC,EAAAA,IAAI,EAAE,YAFP;AAGCC,EAAAA,KAAK,EAAE,YAHR;AAICC,EAAAA,OAAO,EAAE;AAJV,CALe,CAAlB;AAYA,OAAO,IAAMC,YAAY,GAAG;AACxBC,EAAAA,IAAI,EAAE;AADkB,CAArB;AAIP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B,C,CAAiD;;AACxD,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B,C,CAAiD;;AACxD,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B,C,CAAiD;;AAExD,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B,C,CAA+C;;AACtD,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B,C,CAA+C;;AACtD,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B,C,CAA+C;;AAEtD,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B,C,CAAqD;;AAC5D,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B,C,CAAqD;;AAC5D,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B,C,CAAqD;;AAE5D,OAAO,IAAMC,eAAe,GAAG,iBAAxB,C,CAA2C;;AAClD,OAAO,IAAMC,eAAe,GAAG,iBAAxB,C,CAA2C;;AAClD,OAAO,IAAMC,eAAe,GAAG,iBAAxB,C,CAA2C;AAClD;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,MAACC,KAAD,uEAASf,YAAT;AAAA,MAAuBgB,MAAvB;AAAA,SAAkCtB,OAAO,CAACqB,KAAD,EAAQ,UAACE,KAAD,EAAW;AACxE,YAAOD,MAAM,CAACE,IAAd;AACI,WAAKhB,kBAAL;AAAwB;AACpB;AACA;AACA,cAAMiB,QAAQ,GAAGxB,SAAS,CAACyB,MAAV,CAAiB,UAACC,CAAD;AAAA,mBAAOA,CAAC,CAACxB,IAAF,KAAWmB,MAAM,CAACM,IAAzB;AAAA,WAAjB,EAAgD,CAAhD,CAAjB;AACAL,UAAAA,KAAK,CAAChB,IAAN,CAAWL,EAAX,GAAgBuB,QAAQ,CAACvB,EAAzB;AACAqB,UAAAA,KAAK,CAAChB,IAAN,CAAWH,KAAX,GAAmBqB,QAAQ,CAACrB,KAA5B;AACAmB,UAAAA,KAAK,CAAChB,IAAN,CAAWF,OAAX,GAAqBoB,QAAQ,CAACpB,OAA9B;AACAkB,UAAAA,KAAK,CAAChB,IAAN,CAAWJ,IAAX,GAAkBsB,QAAQ,CAACtB,IAA3B;AACA;AACH;;AACD,WAAKQ,iBAAL;AAAuB;AACnBY,UAAAA,KAAK,CAAChB,IAAN,CAAWsB,IAAX,CAAgBP,MAAM,CAACM,IAAvB;AACA;AACH;;AACD,WAAKd,oBAAL;AAA0B;AACtB;AACAS,UAAAA,KAAK,CAACtB,SAAN,GAAkBA,SAAS,CAACyB,MAAV,CAAiB,UAACC,CAAD;AAAA,mBAAOA,CAAC,CAACzB,EAAF,KAASoB,MAAM,CAACM,IAAP,CAAY1B,EAA5B;AAAA,WAAjB,CAAlB;AACA;AACH;;AACD,WAAKe,eAAL;AAAqB;AACjBa,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAR,UAAAA,KAAK,CAAChB,IAAN,GAAa,IAAb;AACA;AACH;AAxBL;AA0BH,GA3BwD,CAAzC;AAAA,CAAhB;;AA6BA,eAAea,OAAf","sourcesContent":["import produce from '../util/produce';\n\n//bucket 더미 데이터\n\nconst dummyData = [{\n    id: 1,\n    date: \"2021-01-01\",\n    title: \"오랜만에 공장알바 1일차\",\n    content: '다 이 어 트'\n}, {\n    id: 2,\n    date: \"2021-01-08\",\n    title: \"ㅏㅇ아ㅏㅇ아아아ㅏ아\",\n    content: '미칠가기ㅣ닝미이밍'\n}]\n\nexport const initialState = {\n    post: {},\n};\n\nexport const LOAD_DIARY_REQUEST = 'LOAD_DIARY_REQUEST'; // 액션의 이름\nexport const LOAD_DIARY_SUCCESS = 'LOAD_DIARY_SUCCESS'; // 액션의 이름\nexport const LOAD_DIARY_FAILURE = 'LOAD_DIARY_FAILURE'; // 액션의 이름\n\nexport const ADD_DIARY_REQUEST = 'ADD_DIARY_REQUEST'; // 액션의 이름\nexport const ADD_DIARY_SUCCESS = 'ADD_DIARY_SUCCESS'; // 액션의 이름\nexport const ADD_DIARY_FAILURE = 'ADD_DIARY_FAILURE'; // 액션의 이름\n\nexport const REMOVE_DIARY_REQUEST = 'REMOVE_DIARY_REQUEST'; // 액션의 이름\nexport const REMOVE_DIARY_SUCCESS = 'REMOVE_DIARY_SUCCESS'; // 액션의 이름\nexport const REMOVE_DIARY_FAILURE = 'REMOVE_DIARY_FAILURE'; // 액션의 이름\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST'; // 액션의 이름\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS'; // 액션의 이름\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'; // 액션의 이름\n//현재는 REQUEST에서 SUCCESS역활까지 하고있음, saga작성 시 구분하기!\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\n    switch(action.type){\n        case LOAD_DIARY_REQUEST:{\n            //현재는 더미데이터에서 찾아서 넣고있지만 디비 작업시\n            //백엔드에서 해당 데이터 찾아와 바로 넣기\n            const tempdata = dummyData.filter((v) => v.date === action.data)[0];\n            draft.post.id = tempdata.id;\n            draft.post.title = tempdata.title;\n            draft.post.content = tempdata.content;\n            draft.post.date = tempdata.date;\n            break;\n        }\n        case ADD_DIARY_REQUEST:{\n            draft.post.push(action.data);\n            break;\n        }\n        case REMOVE_DIARY_REQUEST:{\n            //현재는 더미데이터에서 삭제하지만 디비 작업시 디비에서 삭제\n            draft.dummyData = dummyData.filter((v) => v.id !== action.data.id);\n            break;\n        }\n        case LOG_OUT_REQUEST:{\n            console.log(\"LOG_OUT_REQUEST\");\n            draft.post = null;\n            break;\n        }\n    }\n})\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}