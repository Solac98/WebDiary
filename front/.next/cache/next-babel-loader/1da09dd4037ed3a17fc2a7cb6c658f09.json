{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from 'next-redux-wrapper';\nimport { combineReducers } from 'redux';\nimport user from './user';\nimport calendar from './calendar';\nimport bucket from './bucket';\nconst rootReducer = combineReducers({\n  index: (state = {}, action) => {\n    switch (action.type) {\n      case HYDRATE:\n        console.log('HYDRATE', action);\n        return _objectSpread(_objectSpread({}, state), action.payload);\n\n      default:\n        return state;\n    }\n  },\n  user,\n  calendar,\n  bucket\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/sol/google/Project/SolarSeed/front/reducers/index.js"],"names":["HYDRATE","combineReducers","user","calendar","bucket","rootReducer","index","state","action","type","console","log","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,WAAW,GAAGJ,eAAe,CAAC;AAChCK,EAAAA,KAAK,EAAE,CAACC,KAAK,GAAE,EAAR,EAAYC,MAAZ,KAAuB;AAC1B,YAAOA,MAAM,CAACC,IAAd;AACI,WAAKT,OAAL;AACIU,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAvB;AACA,+CAAWD,KAAX,GAAqBC,MAAM,CAACI,OAA5B;;AACJ;AACI,eAAOL,KAAP;AALR;AAOH,GAT+B;AAUhCL,EAAAA,IAVgC;AAWhCC,EAAAA,QAXgC;AAYhCC,EAAAA;AAZgC,CAAD,CAAnC;AAeA,eAAeC,WAAf","sourcesContent":["import { HYDRATE } from 'next-redux-wrapper';\nimport { combineReducers } from 'redux';\n\nimport user from './user';\nimport calendar from './calendar';\nimport bucket from './bucket';\n\nconst rootReducer = combineReducers({\n    index: (state ={}, action) => {\n        switch(action.type){\n            case HYDRATE :\n                console.log('HYDRATE', action);\n                return {...state, ...action.payload};\n            default:\n                return state;\n        }\n    },\n    user,\n    calendar,\n    bucket,\n});\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}