{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, put, takeLatest, throttle, call } from 'redux-saga';\nimport { UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS } from '../reducers/diary';\n\nfunction uplodaImagesAPI(data) {\n  return axios.post('/diary/images', data);\n}\n\nfunction* uplodaImages(action) {\n  try {\n    const result = yield call(uplodaImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uplodaImages);\n}\n\nexport default function* () {\n  yield all([fork(watchUploadImages)]);\n}","map":{"version":3,"sources":["/Users/sol/google/Project/SolarSeed/front/sagas/diary.js"],"names":["axios","all","fork","put","takeLatest","throttle","call","UPLOAD_IMAGES_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","uplodaImagesAPI","data","post","uplodaImages","action","result","type","error","console","response","watchUploadImages"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,QAArC,EAA+CC,IAA/C,QAA0D,YAA1D;AACA,SAASC,qBAAT,EAAgCC,qBAAhC,EAAuDC,qBAAvD,QAAoF,mBAApF;;AAEA,SAASC,eAAT,CAAyBC,IAAzB,EAA8B;AAC1B,SAAOX,KAAK,CAACY,IAAN,CAAW,eAAX,EAA4BD,IAA5B,CAAP;AACH;;AAED,UAAUE,YAAV,CAAuBC,MAAvB,EAA8B;AAC1B,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMT,IAAI,CAACI,eAAD,EAAkBI,MAAM,CAACH,IAAzB,CAAzB;AACA,UAAMR,GAAG,CAAC;AACNa,MAAAA,IAAI,EAAEP,qBADA;AAENE,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFP,KAAD,CAAT;AAIH,GAND,CAME,OAAOM,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,UAAMd,GAAG,CAAC;AACNa,MAAAA,IAAI,EAAET,qBADA;AAENU,MAAAA,KAAK,EAAEA,KAAK,CAACE,QAAN,CAAeR;AAFhB,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUS,iBAAV,GAA6B;AACzB,QAAMhB,UAAU,CAACI,qBAAD,EAAwBK,YAAxB,CAAhB;AACH;;AAED,eAAe,aAAa;AACxB,QAAMZ,GAAG,CAAC,CACNC,IAAI,CAACkB,iBAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import axios from 'axios';\nimport { all, fork, put, takeLatest, throttle, call} from 'redux-saga';\nimport { UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS } from '../reducers/diary';\n\nfunction uplodaImagesAPI(data){\n    return axios.post('/diary/images', data);\n}\n\nfunction* uplodaImages(action){\n    try {\n        const result = yield call(uplodaImagesAPI, action.data);\n        yield put({\n            type: UPLOAD_IMAGES_SUCCESS,\n            data: result.data,\n        });\n    } catch (error) {\n        console.error(error);\n        yield put({\n            type: UPLOAD_IMAGES_FAILURE,\n            error: error.response.data,\n        });\n    }\n}\n\nfunction* watchUploadImages(){\n    yield takeLatest(UPLOAD_IMAGES_REQUEST, uplodaImages);\n}\n\nexport default function* () {\n    yield all([\n        fork(watchUploadImages),\n    ]);\n}"]},"metadata":{},"sourceType":"module"}