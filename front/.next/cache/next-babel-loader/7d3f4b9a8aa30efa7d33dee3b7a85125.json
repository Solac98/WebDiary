{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, put, takeLatest, throttle, call } from 'redux-saga/effects';\nimport { ADD_DIARY_REQUEST, ADD_DIARY_SUCCESS, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS } from '../reducers/diary';\n\nfunction uplodaImagesAPI(data) {\n  return axios.post('/diary/images', data);\n}\n\nfunction* uplodaImages(action) {\n  try {\n    const result = yield call(uplodaImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction addDiaryAPI(data) {\n  return axios.post('/diary', data);\n}\n\nfunction* addDiary(action) {\n  try {\n    const result = yield call(addDiaryAPI, action.data);\n    yield put({\n      type: ADD_DIARY_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: ADD_DIARY_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uplodaImages);\n}\n\nfunction* watchAddDiary() {\n  yield takeLatest(ADD_DIARY_REQUEST, addDiary);\n}\n\nexport default function* () {\n  yield all([fork(watchUploadImages), fork(watchAddDiary)]);\n}","map":{"version":3,"sources":["/Users/sol/google/Project/SolarSeed/front/sagas/diary.js"],"names":["axios","all","fork","put","takeLatest","throttle","call","ADD_DIARY_REQUEST","ADD_DIARY_SUCCESS","UPLOAD_IMAGES_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","uplodaImagesAPI","data","post","uplodaImages","action","result","type","error","console","response","addDiaryAPI","addDiary","ADD_DIARY_FAILURE","watchUploadImages","watchAddDiary"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,QAArC,EAA+CC,IAA/C,QAA0D,oBAA1D;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,EAA+CC,qBAA/C,EAAsEC,qBAAtE,EAA6FC,qBAA7F,QAA0H,mBAA1H;;AAEA,SAASC,eAAT,CAAyBC,IAAzB,EAA8B;AAC1B,SAAOb,KAAK,CAACc,IAAN,CAAW,eAAX,EAA4BD,IAA5B,CAAP;AACH;;AAED,UAAUE,YAAV,CAAuBC,MAAvB,EAA8B;AAC1B,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMX,IAAI,CAACM,eAAD,EAAkBI,MAAM,CAACH,IAAzB,CAAzB;AACA,UAAMV,GAAG,CAAC;AACNe,MAAAA,IAAI,EAAEP,qBADA;AAENE,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFP,KAAD,CAAT;AAIH,GAND,CAME,OAAOM,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,UAAMhB,GAAG,CAAC;AACNe,MAAAA,IAAI,EAAET,qBADA;AAENU,MAAAA,KAAK,EAAEA,KAAK,CAACE,QAAN,CAAeR;AAFhB,KAAD,CAAT;AAIH;AACJ;;AAED,SAASS,WAAT,CAAqBT,IAArB,EAA0B;AACtB,SAAOb,KAAK,CAACc,IAAN,CAAW,QAAX,EAAqBD,IAArB,CAAP;AACH;;AAED,UAAUU,QAAV,CAAmBP,MAAnB,EAA0B;AACtB,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMX,IAAI,CAACgB,WAAD,EAAcN,MAAM,CAACH,IAArB,CAAzB;AACA,UAAMV,GAAG,CAAC;AACNe,MAAAA,IAAI,EAAEV,iBADA;AAENK,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFP,KAAD,CAAT;AAIH,GAND,CAME,OAAOM,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,UAAMhB,GAAG,CAAC;AACNe,MAAAA,IAAI,EAAEM,iBADA;AAENL,MAAAA,KAAK,EAAEA,KAAK,CAACE,QAAN,CAAeR;AAFhB,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUY,iBAAV,GAA6B;AACzB,QAAMrB,UAAU,CAACM,qBAAD,EAAwBK,YAAxB,CAAhB;AACH;;AAED,UAAUW,aAAV,GAA0B;AACtB,QAAMtB,UAAU,CAACG,iBAAD,EAAoBgB,QAApB,CAAhB;AACH;;AAED,eAAe,aAAa;AACxB,QAAMtB,GAAG,CAAC,CACNC,IAAI,CAACuB,iBAAD,CADE,EAENvB,IAAI,CAACwB,aAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import axios from 'axios';\nimport { all, fork, put, takeLatest, throttle, call} from 'redux-saga/effects';\nimport { ADD_DIARY_REQUEST, ADD_DIARY_SUCCESS, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS } from '../reducers/diary';\n\nfunction uplodaImagesAPI(data){\n    return axios.post('/diary/images', data);\n}\n\nfunction* uplodaImages(action){\n    try {\n        const result = yield call(uplodaImagesAPI, action.data);\n        yield put({\n            type: UPLOAD_IMAGES_SUCCESS,\n            data: result.data,\n        });\n    } catch (error) {\n        console.error(error);\n        yield put({\n            type: UPLOAD_IMAGES_FAILURE,\n            error: error.response.data,\n        });\n    }\n}\n\nfunction addDiaryAPI(data){\n    return axios.post('/diary', data);\n}\n\nfunction* addDiary(action){\n    try {\n        const result = yield call(addDiaryAPI, action.data);\n        yield put({\n            type: ADD_DIARY_SUCCESS,\n            data: result.data,\n        });\n    } catch (error) {\n        console.error(error);\n        yield put({\n            type: ADD_DIARY_FAILURE,\n            error: error.response.data,\n        });\n    }\n}\n\nfunction* watchUploadImages(){\n    yield takeLatest(UPLOAD_IMAGES_REQUEST, uplodaImages);\n}\n\nfunction* watchAddDiary() {\n    yield takeLatest(ADD_DIARY_REQUEST, addDiary);\n}\n\nexport default function* () {\n    yield all([\n        fork(watchUploadImages),\n        fork(watchAddDiary),\n    ]);\n}"]},"metadata":{},"sourceType":"module"}