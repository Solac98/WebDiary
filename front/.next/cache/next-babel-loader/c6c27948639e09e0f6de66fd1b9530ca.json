{"ast":null,"code":"import produce from '../util/produce'; //user 더미 데이터\n\nconst dummyUser = {\n  id: 1,\n  nickname: 'Solac'\n};\nexport const initialState = {\n  isLoggedIn: false,\n  user: null\n};\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'; // 액션의 이름\n\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\n\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST'; // 액션의 이름\n\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS'; // 액션의 이름\n\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'; // 액션의 이름\n//현재는 REQUEST에서 SUCCESS역활까지 하고있음, saga작성 시 구분하기!\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      {\n        console.log(\"LOG_IN_REQUEST\");\n        draft.isLoggedIn = true;\n        draft.user = dummyUser;\n        break;\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        console.log(\"LOG_OUT_REQUEST\");\n        draft.isLoggedIn = false;\n        draft.user = null;\n        break;\n      }\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["/Users/sol/google/Project/SolarSeed/front/reducers/user.js"],"names":["produce","dummyUser","id","nickname","initialState","isLoggedIn","user","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","reducer","state","action","draft","type","console","log"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB,C,CAEA;;AACA,MAAMC,SAAS,GAAG;AACdC,EAAAA,EAAE,EAAE,CADU;AAEdC,EAAAA,QAAQ,EAAE;AAFI,CAAlB;AAKE,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,UAAU,EAAE,KADc;AAE1BC,EAAAA,IAAI,EAAE;AAFoB,CAArB;AAKT,OAAO,MAAMC,cAAc,GAAG,gBAAvB,C,CAAyC;;AAChD,OAAO,MAAMC,cAAc,GAAG,gBAAvB,C,CAAyC;;AAChD,OAAO,MAAMC,cAAc,GAAG,gBAAvB,C,CAAyC;;AAEhD,OAAO,MAAMC,eAAe,GAAG,iBAAxB,C,CAA2C;;AAClD,OAAO,MAAMC,eAAe,GAAG,iBAAxB,C,CAA2C;;AAClD,OAAO,MAAMC,eAAe,GAAG,iBAAxB,C,CAA2C;AAClD;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkCf,OAAO,CAACc,KAAD,EAASE,KAAD,IAAW;AACxE,UAAOD,MAAM,CAACE,IAAd;AACI,SAAKV,cAAL;AAAoB;AAChBW,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAH,QAAAA,KAAK,CAACX,UAAN,GAAmB,IAAnB;AACAW,QAAAA,KAAK,CAACV,IAAN,GAAaL,SAAb;AACA;AACH;;AACD,SAAKS,eAAL;AAAqB;AACjBQ,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAH,QAAAA,KAAK,CAACX,UAAN,GAAmB,KAAnB;AACAW,QAAAA,KAAK,CAACV,IAAN,GAAa,IAAb;AACA;AACH;AAZL;AAcH,CAfwD,CAAzD;;AAiBA,eAAeO,OAAf","sourcesContent":["import produce from '../util/produce';\n\n//user 더미 데이터\nconst dummyUser = {\n    id: 1,\n    nickname: 'Solac',\n  };\n\n  export const initialState = {\n    isLoggedIn: false,\n    user: null,\n  };\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'; // 액션의 이름\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST'; // 액션의 이름\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS'; // 액션의 이름\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'; // 액션의 이름\n//현재는 REQUEST에서 SUCCESS역활까지 하고있음, saga작성 시 구분하기!\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\n    switch(action.type){\n        case LOG_IN_REQUEST:{\n            console.log(\"LOG_IN_REQUEST\");\n            draft.isLoggedIn = true;\n            draft.user = dummyUser;\n            break;\n        }\n        case LOG_OUT_REQUEST:{\n            console.log(\"LOG_OUT_REQUEST\");\n            draft.isLoggedIn = false;\n            draft.user = null;\n            break;\n        }\n    }\n})\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}