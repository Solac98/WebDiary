{"ast":null,"code":"import produce from '../util/produce'; //bucket 더미 데이터\n\nexport const initialState = {\n  post: {\n    Images: []\n  },\n  imagePaths: [],\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n  addDiaryLoading: false,\n  addDiaryDone: false,\n  addDiaryError: null,\n  loadDiaryLoading: false,\n  loadDiaryDone: false,\n  loadDiaryError: null,\n  deleteDiaryLoading: false,\n  deleteDiaryDone: false,\n  deleteDiaryError: null\n};\nexport const DELETE_DIARY_REQUEST = 'DELETE_DIARY_REQUEST'; // 액션의 이름\n\nexport const DELETE_DIARY_SUCCESS = 'DELETE_DIARY_SUCCESS'; // 액션의 이름\n\nexport const DELETE_DIARY_FAILURE = 'DELETE_DIARY_FAILURE';\nexport const DELETE_DIARY_RESET = 'DELETE_DIARY_RESET';\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST'; // 액션의 이름\n\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS'; // 액션의 이름\n\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE'; // 액션의 이름\n\nexport const LOAD_DIARY_REQUEST = 'LOAD_DIARY_REQUEST'; // 액션의 이름\n\nexport const LOAD_DIARY_SUCCESS = 'LOAD_DIARY_SUCCESS'; // 액션의 이름\n\nexport const LOAD_DIARY_FAILURE = 'LOAD_DIARY_FAILURE'; // 액션의 이름\n\nexport const ADD_DIARY_REQUEST = 'ADD_DIARY_REQUEST'; // 액션의 이름\n\nexport const ADD_DIARY_SUCCESS = 'ADD_DIARY_SUCCESS'; // 액션의 이름\n\nexport const ADD_DIARY_FAILURE = 'ADD_DIARY_FAILURE'; // 액션의 이름\n\nexport const REMOVE_DIARY_REQUEST = 'REMOVE_DIARY_REQUEST'; // 액션의 이름\n\nexport const REMOVE_DIARY_SUCCESS = 'REMOVE_DIARY_SUCCESS'; // 액션의 이름\n\nexport const REMOVE_DIARY_FAILURE = 'REMOVE_DIARY_FAILURE'; // 액션의 이름\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST'; // 액션의 이름\n\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS'; // 액션의 이름\n\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'; // 액션의 이름\n\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE'; //현재는 REQUEST에서 SUCCESS역활까지 하고있음, saga작성 시 구분하기!\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case DELETE_DIARY_RESET:\n      {\n        draft.deleteDiaryDone = false;\n      }\n\n    case DELETE_DIARY_REQUEST:\n      {\n        draft.deleteDiaryLoading = true;\n        draft.deleteDiaryDone = false;\n        draft.deleteDiaryError = null;\n        break;\n      }\n\n    case DELETE_DIARY_SUCCESS:\n      {\n        draft.post = {\n          Images: []\n        };\n        draft.imagePaths = [];\n        draft.deleteDiaryLoading = false;\n        draft.deleteDiaryDone = true;\n        break;\n      }\n\n    case DELETE_DIARY_FAILURE:\n      {\n        draft.deleteDiaryLoading = false;\n        draft.deleteDiaryError = action.error;\n        break;\n      }\n\n    case REMOVE_IMAGE:\n      draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\n      break;\n\n    case LOG_OUT_SUCCESS:\n      //Logout - Reset DiaryData\n      draft.post = {\n        Images: []\n      };\n      draft.imagePaths = [];\n\n    case UPLOAD_IMAGES_REQUEST:\n      {\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesError = null;\n        break;\n      }\n\n    case UPLOAD_IMAGES_SUCCESS:\n      {\n        draft.imagePaths = action.data;\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesDone = true;\n        break;\n      }\n\n    case UPLOAD_IMAGES_FAILURE:\n      {\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesError = action.error;\n        break;\n      }\n\n    case LOAD_DIARY_REQUEST:\n      {\n        draft.loadDiaryLoading = true;\n        draft.loadDiaryDone = false;\n        draft.loadDiaryError = null;\n        break;\n      }\n\n    case LOAD_DIARY_SUCCESS:\n      {\n        draft.loadDiaryLoading = false;\n        draft.loadDiaryDone = true;\n        draft.post = action.data;\n        break;\n      }\n\n    case LOAD_DIARY_FAILURE:\n      {\n        draft.loadDiaryLoading = false;\n        draft.loadDiaryError = action.error;\n        break;\n      }\n\n    case ADD_DIARY_REQUEST:\n      {\n        draft.addDiaryLoading = true;\n        draft.addDiaryDone = false;\n        draft.addDiaryError = null;\n        break;\n      }\n\n    case ADD_DIARY_SUCCESS:\n      {\n        draft.addDiaryLoading = false;\n        draft.addDiaryDone = true;\n        draft.post = action.data;\n        break;\n      }\n\n    case ADD_DIARY_FAILURE:\n      {\n        draft.addDiaryLoading = false;\n        draft.addDiaryError = action.error;\n        break;\n      }\n\n    case REMOVE_DIARY_REQUEST:\n      {\n        //현재는 더미데이터에서 삭제하지만 디비 작업시 디비에서 삭제\n        draft.dummyData = dummyData.post.filter(v => v.id !== action.data.id);\n        break;\n      }\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["/Users/sol/google/Project/SolarSeed/front/reducers/diary.js"],"names":["produce","initialState","post","Images","imagePaths","uploadImagesLoading","uploadImagesDone","uploadImagesError","addDiaryLoading","addDiaryDone","addDiaryError","loadDiaryLoading","loadDiaryDone","loadDiaryError","deleteDiaryLoading","deleteDiaryDone","deleteDiaryError","DELETE_DIARY_REQUEST","DELETE_DIARY_SUCCESS","DELETE_DIARY_FAILURE","DELETE_DIARY_RESET","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","LOAD_DIARY_REQUEST","LOAD_DIARY_SUCCESS","LOAD_DIARY_FAILURE","ADD_DIARY_REQUEST","ADD_DIARY_SUCCESS","ADD_DIARY_FAILURE","REMOVE_DIARY_REQUEST","REMOVE_DIARY_SUCCESS","REMOVE_DIARY_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","REMOVE_IMAGE","reducer","state","action","draft","type","error","filter","v","i","data","dummyData","id"],"mappings":"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","sourcesContent":["import produce from '../util/produce';\n\n//bucket 더미 데이터\n\nexport const initialState = {\n    post: {\n        Images: [],\n    },\n    imagePaths: [],\n    uploadImagesLoading: false,\n    uploadImagesDone: false,\n    uploadImagesError: null,\n\n    addDiaryLoading: false,\n    addDiaryDone: false,\n    addDiaryError: null,\n\n    loadDiaryLoading: false,\n    loadDiaryDone: false,\n    loadDiaryError: null,\n\n    deleteDiaryLoading: false,\n    deleteDiaryDone: false,\n    deleteDiaryError: null,\n};\n\nexport const DELETE_DIARY_REQUEST = 'DELETE_DIARY_REQUEST'; // 액션의 이름\nexport const DELETE_DIARY_SUCCESS = 'DELETE_DIARY_SUCCESS'; // 액션의 이름\nexport const DELETE_DIARY_FAILURE = 'DELETE_DIARY_FAILURE';\nexport const DELETE_DIARY_RESET = 'DELETE_DIARY_RESET';\n\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST'; // 액션의 이름\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS'; // 액션의 이름\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE'; // 액션의 이름\n\nexport const LOAD_DIARY_REQUEST = 'LOAD_DIARY_REQUEST'; // 액션의 이름\nexport const LOAD_DIARY_SUCCESS = 'LOAD_DIARY_SUCCESS'; // 액션의 이름\nexport const LOAD_DIARY_FAILURE = 'LOAD_DIARY_FAILURE'; // 액션의 이름\n\nexport const ADD_DIARY_REQUEST = 'ADD_DIARY_REQUEST'; // 액션의 이름\nexport const ADD_DIARY_SUCCESS = 'ADD_DIARY_SUCCESS'; // 액션의 이름\nexport const ADD_DIARY_FAILURE = 'ADD_DIARY_FAILURE'; // 액션의 이름\n\nexport const REMOVE_DIARY_REQUEST = 'REMOVE_DIARY_REQUEST'; // 액션의 이름\nexport const REMOVE_DIARY_SUCCESS = 'REMOVE_DIARY_SUCCESS'; // 액션의 이름\nexport const REMOVE_DIARY_FAILURE = 'REMOVE_DIARY_FAILURE'; // 액션의 이름\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST'; // 액션의 이름\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS'; // 액션의 이름\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'; // 액션의 이름\n\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\n\n\n//현재는 REQUEST에서 SUCCESS역활까지 하고있음, saga작성 시 구분하기!\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\n    switch(action.type){\n        case DELETE_DIARY_RESET: {\n            draft.deleteDiaryDone = false;\n        }\n        case DELETE_DIARY_REQUEST: {\n            draft.deleteDiaryLoading = true;\n            draft.deleteDiaryDone = false;\n            draft.deleteDiaryError = null;\n            break;\n        }\n        case DELETE_DIARY_SUCCESS: {\n            draft.post = {\n                Images: [],\n            };\n            draft.imagePaths = [];\n            draft.deleteDiaryLoading = false;\n            draft.deleteDiaryDone = true;\n            break;\n        }\n        case DELETE_DIARY_FAILURE: {\n            draft.deleteDiaryLoading = false;\n            draft.deleteDiaryError = action.error;\n            break;\n        }\n        case REMOVE_IMAGE:\n            draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\n            break;\n        case LOG_OUT_SUCCESS://Logout - Reset DiaryData\n            draft.post = {\n                Images: [],\n            };\n            draft.imagePaths = [];\n        case UPLOAD_IMAGES_REQUEST: {\n            draft.uploadImagesLoading = true;\n            draft.uploadImagesDone = false;\n            draft.uploadImagesError = null;\n            break;\n        }\n        case UPLOAD_IMAGES_SUCCESS: {\n            draft.imagePaths = action.data;\n            draft.uploadImagesLoading = false;\n            draft.uploadImagesDone = true;\n            break;\n        }\n        case UPLOAD_IMAGES_FAILURE: {\n            draft.uploadImagesLoading = false;\n            draft.uploadImagesError = action.error;\n            break;\n        }\n        case LOAD_DIARY_REQUEST:{\n            draft.loadDiaryLoading = true;\n            draft.loadDiaryDone = false;\n            draft.loadDiaryError = null;\n            break;\n        }\n        case LOAD_DIARY_SUCCESS:{\n            draft.loadDiaryLoading = false;\n            draft.loadDiaryDone = true;\n            draft.post = action.data;\n            break;\n        }\n        case LOAD_DIARY_FAILURE:{\n            draft.loadDiaryLoading = false;\n            draft.loadDiaryError = action.error;\n            break;\n        }\n        case ADD_DIARY_REQUEST:{\n            draft.addDiaryLoading = true;\n            draft.addDiaryDone = false;\n            draft.addDiaryError = null;            \n            break;\n        }\n        case ADD_DIARY_SUCCESS:{\n            draft.addDiaryLoading = false;\n            draft.addDiaryDone = true;\n            draft.post = action.data;\n            break;\n        }\n        case ADD_DIARY_FAILURE:{\n            draft.addDiaryLoading = false;\n            draft.addDiaryError = action.error;\n            break;\n        }\n        case REMOVE_DIARY_REQUEST:{\n            //현재는 더미데이터에서 삭제하지만 디비 작업시 디비에서 삭제\n            draft.dummyData = dummyData.post.filter((v) => v.id !== action.data.id);\n            break;\n        }\n    }\n})\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}