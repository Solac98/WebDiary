{"ast":null,"code":"import produce from '../util/produce'; //user 더미 데이터\n\nconst dummyUser = {\n  id: 1,\n  nickname: 'Solac'\n};\nexport const initialState = {\n  isLoggedIn: false,\n  // Log or Not Log\n  isLogLoading: false,\n  // Login Lodaing\n  isLogError: null,\n  //LogIn Error\n  user: null // User Info\n\n};\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'; // 액션의 이름\n\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\n\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST'; // 액션의 이름\n\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS'; // 액션의 이름\n\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'; // 액션의 이름\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    // Login\n    case LOG_IN_REQUEST:\n      {\n        draft.isLogLoading = true; // LogIn Loading On\n\n        break;\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        draft.isLogLoading = false; //LogIn Loading Off\n\n        draft.isLoggedIn = true; //LogIn Done\n\n        draft.user = dummyUser; // UserData Insert\n\n        break;\n      }\n\n    case LOG_IN_FAILURE:\n      {\n        draft.isLogLoading = false; //LogIn Loading Off\n\n        draft.isLogError = action.data; // Error Insert\n\n        break;\n      }\n    // Logout\n\n    case LOG_OUT_REQUEST:\n      {\n        draft.isLogLoading = true; // LogIn Loading On\n\n        break;\n      }\n\n    case LOG_OUT_SUCCESS:\n      {\n        draft.isLogLoading = false; //LogIn Loading Off\n\n        draft.isLoggedIn = false; //LogIn Done\n\n        draft.user = null; // UserData Insert\n\n        break;\n      }\n\n    case LOG_OUT_FAILURE:\n      {\n        draft.isLogLoading = false; //LogIn Loading Off\n\n        draft.isLogError = action.data; // Error Insert\n\n        break;\n      }\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["/Users/sol/google/Project/SolarSeed/front/reducers/user.js"],"names":["produce","dummyUser","id","nickname","initialState","isLoggedIn","isLogLoading","isLogError","user","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","reducer","state","action","draft","type","data"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB,C,CAEA;;AACA,MAAMC,SAAS,GAAG;AACdC,EAAAA,EAAE,EAAE,CADU;AAEdC,EAAAA,QAAQ,EAAE;AAFI,CAAlB;AAKE,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,UAAU,EAAE,KADY;AACN;AAClBC,EAAAA,YAAY,EAAE,KAFU;AAEH;AACrBC,EAAAA,UAAU,EAAE,IAHY;AAGN;AAElBC,EAAAA,IAAI,EAAE,IALkB,CAKb;;AALa,CAArB;AAQT,OAAO,MAAMC,cAAc,GAAG,gBAAvB,C,CAAyC;;AAChD,OAAO,MAAMC,cAAc,GAAG,gBAAvB,C,CAAyC;;AAChD,OAAO,MAAMC,cAAc,GAAG,gBAAvB,C,CAAyC;;AAEhD,OAAO,MAAMC,eAAe,GAAG,iBAAxB,C,CAA2C;;AAClD,OAAO,MAAMC,eAAe,GAAG,iBAAxB,C,CAA2C;;AAClD,OAAO,MAAMC,eAAe,GAAG,iBAAxB,C,CAA2C;;AAElD,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGZ,YAAT,EAAuBa,MAAvB,KAAkCjB,OAAO,CAACgB,KAAD,EAASE,KAAD,IAAW;AACxE,UAAOD,MAAM,CAACE,IAAd;AACI;AACA,SAAKV,cAAL;AAAoB;AAChBS,QAAAA,KAAK,CAACZ,YAAN,GAAqB,IAArB,CADgB,CACW;;AAC3B;AACH;;AACD,SAAKI,cAAL;AAAqB;AACjBQ,QAAAA,KAAK,CAACZ,YAAN,GAAqB,KAArB,CADiB,CACW;;AAC5BY,QAAAA,KAAK,CAACb,UAAN,GAAmB,IAAnB,CAFiB,CAEQ;;AACzBa,QAAAA,KAAK,CAACV,IAAN,GAAaP,SAAb,CAHiB,CAGO;;AACxB;AACH;;AACD,SAAKU,cAAL;AAAqB;AACjBO,QAAAA,KAAK,CAACZ,YAAN,GAAqB,KAArB,CADiB,CACW;;AAC5BY,QAAAA,KAAK,CAACX,UAAN,GAAmBU,MAAM,CAACG,IAA1B,CAFiB,CAEc;;AAC/B;AACH;AACD;;AACA,SAAKR,eAAL;AAAqB;AACjBM,QAAAA,KAAK,CAACZ,YAAN,GAAqB,IAArB,CADiB,CACU;;AAC3B;AACH;;AACD,SAAKO,eAAL;AAAsB;AAClBK,QAAAA,KAAK,CAACZ,YAAN,GAAqB,KAArB,CADkB,CACU;;AAC5BY,QAAAA,KAAK,CAACb,UAAN,GAAmB,KAAnB,CAFkB,CAEQ;;AAC1Ba,QAAAA,KAAK,CAACV,IAAN,GAAa,IAAb,CAHkB,CAGC;;AACnB;AACH;;AACD,SAAKM,eAAL;AAAsB;AAClBI,QAAAA,KAAK,CAACZ,YAAN,GAAqB,KAArB,CADkB,CACU;;AAC5BY,QAAAA,KAAK,CAACX,UAAN,GAAmBU,MAAM,CAACG,IAA1B,CAFkB,CAEa;;AAC/B;AACH;AAhCL;AAkCH,CAnCwD,CAAzD;;AAqCA,eAAeL,OAAf","sourcesContent":["import produce from '../util/produce';\n\n//user 더미 데이터\nconst dummyUser = {\n    id: 1,\n    nickname: 'Solac',\n  };\n\n  export const initialState = {\n      isLoggedIn: false,// Log or Not Log\n      isLogLoading: false, // Login Lodaing\n      isLogError: null, //LogIn Error\n\n      user: null,// User Info\n  };\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'; // 액션의 이름\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST'; // 액션의 이름\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS'; // 액션의 이름\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'; // 액션의 이름\n\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\n    switch(action.type){\n        // Login\n        case LOG_IN_REQUEST:{\n            draft.isLogLoading = true; // LogIn Loading On\n            break;\n        }\n        case LOG_IN_SUCCESS: {\n            draft.isLogLoading = false; //LogIn Loading Off\n            draft.isLoggedIn = true; //LogIn Done\n            draft.user = dummyUser; // UserData Insert\n            break;\n        }\n        case LOG_IN_FAILURE: {\n            draft.isLogLoading = false; //LogIn Loading Off\n            draft.isLogError = action.data;// Error Insert\n            break;\n        }\n        // Logout\n        case LOG_OUT_REQUEST:{\n            draft.isLogLoading = true; // LogIn Loading On\n            break;\n        }\n        case LOG_OUT_SUCCESS: {\n            draft.isLogLoading = false; //LogIn Loading Off\n            draft.isLoggedIn = false; //LogIn Done\n            draft.user = null; // UserData Insert\n            break;\n        }\n        case LOG_OUT_FAILURE: {\n            draft.isLogLoading = false; //LogIn Loading Off\n            draft.isLogError = action.data;// Error Insert\n            break;\n        }\n    }\n})\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}