{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(logIn),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(logOut),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(signUp),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogIn),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogOut),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignUp),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(usersSaga);\n\nimport { all, delay, fork, put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_FAILURE, LOG_OUT_SUCCESS, SIGN_UP_REQUEST, SIGN_UP_FAILURE, SIGN_UP_SUCCESS } from '../reducers/user';\n\nfunction logInAPI(data) {// return axios.post('/user/login', data);\n}\n\nfunction logIn(action) {\n  return _regeneratorRuntime.wrap(function logIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context.next = 5;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: action.data\n          });\n\n        case 5:\n          _context.next = 12;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 12;\n          return put({\n            type: LOG_IN_FAILURE,\n            error: _context.t0.reponse.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 7]]);\n}\n\nfunction logOutAPI() {//return axios.post('/user/logout');\n}\n\nfunction logOut(action) {\n  return _regeneratorRuntime.wrap(function logOut$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context2.next = 5;\n          return put({\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 5:\n          _context2.next = 12;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(_context2.t0);\n          _context2.next = 12;\n          return put({\n            type: LOG_OUT_FAILURE,\n            error: _context2.t0.reponse.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 7]]);\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user/signup', data);\n}\n\nfunction signUp(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function signUp$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(signUpAPI, action.data);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 6:\n          _context3.next = 14;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(\"ddddd\");\n          console.error(_context3.t0.reponse);\n          _context3.next = 14;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context3.t0.reponse\n          });\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n} // LogIn\n\n\nfunction watchLogIn() {\n  return _regeneratorRuntime.wrap(function watchLogIn$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(LOG_IN_REQUEST, logIn);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n} // LogOut\n\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logOut);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n} //Sign Up\n\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nexport default function usersSaga() {\n  return _regeneratorRuntime.wrap(function usersSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}","map":{"version":3,"sources":["/Users/sol/google/Project/SolarSeed/front/sagas/user.js"],"names":["logIn","logOut","signUp","watchLogIn","watchLogOut","watchSignUp","usersSaga","all","delay","fork","put","takeLatest","call","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_FAILURE","LOG_OUT_SUCCESS","SIGN_UP_REQUEST","SIGN_UP_FAILURE","SIGN_UP_SUCCESS","logInAPI","data","action","type","console","error","reponse","logOutAPI","signUpAPI","post","result","log"],"mappings":"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","sourcesContent":["import { all, delay, fork, put, takeLatest, call} from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_FAILURE, LOG_OUT_SUCCESS, SIGN_UP_REQUEST, SIGN_UP_FAILURE, SIGN_UP_SUCCESS } from '../reducers/user';\n\n\nfunction logInAPI(data) {\n   // return axios.post('/user/login', data);\n}\n\nfunction* logIn(action){\n    try{\n        //const result = yield call(logInAPI, action.data);\n        yield delay(1000);\n        yield put({\n            type: LOG_IN_SUCCESS,\n            data: action.data,\n        });\n    } catch(err) {\n        console.error(err);\n        yield put({\n            type: LOG_IN_FAILURE,\n            error: err.reponse.data,\n        });\n    }\n}\nfunction logOutAPI(){\n    //return axios.post('/user/logout');\n}\n\nfunction* logOut(action){\n    try {\n        //const result = yield call(logOutAPI);\n        yield delay(1000);\n        yield put({\n            type: LOG_OUT_SUCCESS,\n        });\n    } catch (err) {\n        console.error(err);\n        yield put({\n            type: LOG_OUT_FAILURE,\n            error: err.reponse.data,\n        });\n    }\n}\n\nfunction signUpAPI(data) {\n    return axios.post('/user/signup', data);\n}\n\nfunction* signUp(action){\n    try {\n        const result = yield call(signUpAPI, action.data);\n        yield put({\n            type: SIGN_UP_SUCCESS,\n        });\n    } catch (error) {\n        console.log(\"ddddd\");\n        console.error(error.reponse);\n        yield put({\n            type: SIGN_UP_FAILURE,\n            error: error.reponse,\n        });\n    }\n}\n\n// LogIn\nfunction* watchLogIn() {\n    yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n// LogOut\nfunction* watchLogOut() {\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n//Sign Up\nfunction* watchSignUp() {\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\n\nexport default function* usersSaga() {\n    yield all ([\n        fork(watchLogIn),\n        fork(watchLogOut),\n        fork(watchSignUp),\n    ]);\n}"]},"metadata":{},"sourceType":"module"}