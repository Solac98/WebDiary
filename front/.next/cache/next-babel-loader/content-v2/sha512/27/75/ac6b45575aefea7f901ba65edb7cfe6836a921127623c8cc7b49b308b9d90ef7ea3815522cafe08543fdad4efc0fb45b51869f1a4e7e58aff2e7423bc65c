{"ast":null,"code":"import produce from '../util/produce'; //bucket 더미 데이터\n\nexport const initialState = {\n  bucket: [],\n  addBucketLoading: false,\n  addBucketDone: false,\n  addBucketError: null,\n  loadBucketLoading: false,\n  loadBucketDone: false,\n  loadBucketError: null,\n  removeBucketLoading: false,\n  removeBucketDone: false,\n  removeBucketError: null\n};\nexport const LOAD_BUCKET_REQUEST = 'LOAD_BUCKET_REQUEST'; // 액션의 이름\n\nexport const LOAD_BUCKET_SUCCESS = 'LOAD_BUCKET_SUCCESS'; // 액션의 이름\n\nexport const LOAD_BUCKET_FAILURE = 'LOAD_BUCKET_FAILURE'; // 액션의 이름\n\nexport const ADD_BUCKET_REQUEST = 'ADD_BUCKET_REQUEST'; // 액션의 이름\n\nexport const ADD_BUCKET_SUCCESS = 'ADD_BUCKET_SUCCESS'; // 액션의 이름\n\nexport const ADD_BUCKET_FAILURE = 'ADD_BUCKET_FAILURE'; // 액션의 이름\n\nexport const REMOVE_BUCKET_REQUEST = 'REMOVE_BUCKET_REQUEST'; // 액션의 이름\n\nexport const REMOVE_BUCKET_SUCCESS = 'REMOVE_BUCKET_SUCCESS'; // 액션의 이름\n\nexport const REMOVE_BUCKET_FAILURE = 'REMOVE_BUCKET_FAILURE'; // 액션의 이름\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST'; // 액션의 이름\n\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS'; // 액션의 이름\n\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'; // 액션의 이름\n//현재는 REQUEST에서 SUCCESS역활까지 하고있음, saga작성 시 구분하기!\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOAD_BUCKET_REQUEST:\n      {\n        draft.bucket = draft.bucket;\n        break;\n      }\n\n    case LOAD_BUCKET_REQUEST:\n      {\n        draft.loadBucketDone = false;\n        draft.loadBucketLoading = true;\n        draft.loadBucketError = null;\n        break;\n      }\n\n    case LOAD_BUCKET_SUCCESS:\n      {\n        draft.bucket = action.data;\n        draft.loadBucketDone = true;\n        draft.loadBucketLoading = false;\n        break;\n      }\n\n    case LOAD_BUCKET_FAILURE:\n      {\n        draft.loadBucketLoading = false;\n        draft.loadBucketError = action.error;\n      }\n\n    case ADD_BUCKET_REQUEST:\n      {\n        draft.addBucketDone = false;\n        draft.addBucketLoading = true;\n        draft.addBucketError = null;\n        break;\n      }\n\n    case ADD_BUCKET_SUCCESS:\n      {\n        draft.bucket.push(action.data);\n        draft.addBucketDone = true;\n        draft.addBucketLoading = false;\n        break;\n      }\n\n    case ADD_BUCKET_FAILURE:\n      {\n        draft.addBucketLoading = false;\n        draft.addBucketError = action.error;\n      }\n\n    case REMOVE_BUCKET_REQUEST:\n      {\n        draft.removeBucketDone = false;\n        draft.removeBucketLoading = true;\n        draft.removeBucketError = null;\n        break;\n      }\n\n    case REMOVE_BUCKET_SUCCESS:\n      {\n        draft.bucket = draft.bucket.filter(v => v.id !== action.data.id);\n        draft.removeBucketDone = true;\n        draft.removeBucketLoading = false;\n        break;\n      }\n\n    case REMOVE_BUCKET_FAILURE:\n      {\n        draft.removeBucketLoading = false;\n        draft.removeBucketError = action.error;\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        console.log(\"LOG_OUT_REQUEST\"); //draft.bucket = null;\n\n        break;\n      }\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["/Users/sol/google/Project/SolarSeed/front/reducers/bucket.js"],"names":["produce","initialState","bucket","addBucketLoading","addBucketDone","addBucketError","loadBucketLoading","loadBucketDone","loadBucketError","removeBucketLoading","removeBucketDone","removeBucketError","LOAD_BUCKET_REQUEST","LOAD_BUCKET_SUCCESS","LOAD_BUCKET_FAILURE","ADD_BUCKET_REQUEST","ADD_BUCKET_SUCCESS","ADD_BUCKET_FAILURE","REMOVE_BUCKET_REQUEST","REMOVE_BUCKET_SUCCESS","REMOVE_BUCKET_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","reducer","state","action","draft","type","data","error","push","filter","v","id","console","log"],"mappings":"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","sourcesContent":["import produce from '../util/produce';\n\n//bucket 더미 데이터\n\n\nexport const initialState = {\n    bucket: [],\n\n    addBucketLoading: false,\n    addBucketDone: false,\n    addBucketError: null,\n\n    loadBucketLoading: false,\n    loadBucketDone: false,\n    loadBucketError: null,\n\n    removeBucketLoading: false,\n    removeBucketDone: false,\n    removeBucketError: null,\n};\n\nexport const LOAD_BUCKET_REQUEST = 'LOAD_BUCKET_REQUEST'; // 액션의 이름\nexport const LOAD_BUCKET_SUCCESS = 'LOAD_BUCKET_SUCCESS'; // 액션의 이름\nexport const LOAD_BUCKET_FAILURE = 'LOAD_BUCKET_FAILURE'; // 액션의 이름\n\nexport const ADD_BUCKET_REQUEST = 'ADD_BUCKET_REQUEST'; // 액션의 이름\nexport const ADD_BUCKET_SUCCESS = 'ADD_BUCKET_SUCCESS'; // 액션의 이름\nexport const ADD_BUCKET_FAILURE = 'ADD_BUCKET_FAILURE'; // 액션의 이름\n\nexport const REMOVE_BUCKET_REQUEST = 'REMOVE_BUCKET_REQUEST'; // 액션의 이름\nexport const REMOVE_BUCKET_SUCCESS = 'REMOVE_BUCKET_SUCCESS'; // 액션의 이름\nexport const REMOVE_BUCKET_FAILURE = 'REMOVE_BUCKET_FAILURE'; // 액션의 이름\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST'; // 액션의 이름\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS'; // 액션의 이름\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'; // 액션의 이름\n//현재는 REQUEST에서 SUCCESS역활까지 하고있음, saga작성 시 구분하기!\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\n    switch(action.type){\n        case LOAD_BUCKET_REQUEST: {\n            draft.bucket = draft.bucket;\n            break;\n        }\n        case LOAD_BUCKET_REQUEST: {\n            draft.loadBucketDone = false;\n            draft.loadBucketLoading = true;\n            draft.loadBucketError = null;\n            break;\n        }\n        case LOAD_BUCKET_SUCCESS: {\n            draft.bucket = action.data;\n            draft.loadBucketDone = true;\n            draft.loadBucketLoading = false;\n            break;\n        }\n        case LOAD_BUCKET_FAILURE: {\n            draft.loadBucketLoading = false;\n            draft.loadBucketError = action.error;\n        }\n        case ADD_BUCKET_REQUEST: {\n            draft.addBucketDone = false;\n            draft.addBucketLoading = true;\n            draft.addBucketError = null;\n            break;\n        }\n        case ADD_BUCKET_SUCCESS: {\n            draft.bucket.push(action.data);\n            draft.addBucketDone = true;\n            draft.addBucketLoading = false;\n            break;\n        }\n        case ADD_BUCKET_FAILURE: {\n            draft.addBucketLoading = false;\n            draft.addBucketError = action.error;\n        }\n        case REMOVE_BUCKET_REQUEST: {\n            draft.removeBucketDone = false;\n            draft.removeBucketLoading = true;\n            draft.removeBucketError = null;\n            break;\n        }\n        case REMOVE_BUCKET_SUCCESS: {\n            draft.bucket = draft.bucket.filter((v) => v.id !== action.data.id);\n            draft.removeBucketDone = true;\n            draft.removeBucketLoading = false;\n            break;\n        }\n        case REMOVE_BUCKET_FAILURE: {\n            draft.removeBucketLoading = false;\n            draft.removeBucketError = action.error;\n        }\n        case LOG_OUT_REQUEST:{\n            console.log(\"LOG_OUT_REQUEST\");\n            //draft.bucket = null;\n            break;\n        }\n    }\n})\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}