{"ast":null,"code":"import { all, fork, takeLatest, call, put } from \"../../back/routes/user\";\nimport { ADD_BUCKET_FAILURE, ADD_BUCKET_REQUEST } from \"../reducers/bucket\";\nimport axios from 'axios';\n\nfunction addBucketAPI(data) {\n  return axios.post('/bucket', data);\n}\n\nfunction* addBucket(action) {\n  try {\n    const result = yield call(addBucketAPI, action.data);\n    yield put({\n      type: ADD_BUCKET_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_BUCKET_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* watchAddBucket() {\n  yield takeLatest(ADD_BUCKET_REQUEST, addBucket);\n}\n\nexport default function* bucketSaga() {\n  yield all([fork(watchAddBucket) //fork(watchLoadBucket),\n  //fork(watchRemoveBucket),\n  ]);\n}","map":{"version":3,"sources":["/Users/sol/google/Project/SolarSeed/front/sagas/bucket.js"],"names":["all","fork","takeLatest","call","put","ADD_BUCKET_FAILURE","ADD_BUCKET_REQUEST","axios","addBucketAPI","data","post","addBucket","action","result","type","ADD_BUCKET_SUCCESS","error","response","watchAddBucket","bucketSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,IAAhC,EAAsCC,GAAtC,QAAiD,wBAAjD;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,QAAuD,oBAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AACxB,SAAOF,KAAK,CAACG,IAAN,CAAW,SAAX,EAAsBD,IAAtB,CAAP;AACH;;AAED,UAAUE,SAAV,CAAoBC,MAApB,EAA4B;AACxB,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMV,IAAI,CAACK,YAAD,EAAeI,MAAM,CAACH,IAAtB,CAAzB;AACA,UAAML,GAAG,CAAC;AACNU,MAAAA,IAAI,EAAEC,kBADA;AAENN,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFP,KAAD,CAAT;AAIH,GAND,CAME,OAAOO,KAAP,EAAc;AACZ,UAAMZ,GAAG,CAAC;AACNU,MAAAA,IAAI,EAAET,kBADA;AAENW,MAAAA,KAAK,EAAEA,KAAK,CAACC,QAAN,CAAeR;AAFhB,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUS,cAAV,GAA0B;AACtB,QAAMhB,UAAU,CAACI,kBAAD,EAAqBK,SAArB,CAAhB;AACH;;AAED,eAAe,UAAUQ,UAAV,GAAuB;AAClC,QAAMnB,GAAG,CAAC,CACNC,IAAI,CAACiB,cAAD,CADE,CAEN;AACA;AAHM,GAAD,CAAT;AAKH","sourcesContent":["import { all, fork, takeLatest, call, put } from \"../../back/routes/user\";\nimport { ADD_BUCKET_FAILURE, ADD_BUCKET_REQUEST } from \"../reducers/bucket\";\nimport axios from 'axios';\n\nfunction addBucketAPI(data) {\n    return axios.post('/bucket', data);\n}\n\nfunction* addBucket(action) {\n    try {\n        const result = yield call(addBucketAPI, action.data);\n        yield put({\n            type: ADD_BUCKET_SUCCESS,\n            data: result.data,\n        });\n    } catch (error) {\n        yield put({\n            type: ADD_BUCKET_FAILURE,\n            error: error.response.data,\n        });\n    }\n}\n\nfunction* watchAddBucket(){\n    yield takeLatest(ADD_BUCKET_REQUEST, addBucket);\n}\n\nexport default function* bucketSaga() {\n    yield all([\n        fork(watchAddBucket),\n        //fork(watchLoadBucket),\n        //fork(watchRemoveBucket),\n    ]);\n}"]},"metadata":{},"sourceType":"module"}