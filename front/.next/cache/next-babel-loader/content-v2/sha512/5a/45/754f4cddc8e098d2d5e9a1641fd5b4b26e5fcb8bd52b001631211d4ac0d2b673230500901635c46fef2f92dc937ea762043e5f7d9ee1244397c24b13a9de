{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport AppLayout from '../components/AppLayout';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Calendar, Badge, DatePicker, Space, Input, Button } from 'antd';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport { ADD_CALENDAR_REQUEST, LOAD_CALENDAR_REQUEST, REMOVE_CALENDAR_REQUEST } from '../reducers/calendar';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport wrapper from '../store/configureStore';\n\nconst AllCalendar = () => {\n  const dispatch = useDispatch();\n  const {\n    isLoggedIn\n  } = useSelector(state => state.user);\n  const {\n    calendar,\n    addCalendarLoading\n  } = useSelector(state => state.calendar);\n  useEffect(() => {\n    if (!isLoggedIn) {\n      return Router.push('/login');\n    }\n\n    dispatch({\n      type: LOAD_CALENDAR_REQUEST\n    });\n  }, [isLoggedIn]);\n\n  if (!isLoggedIn) {\n    return '내 정보 로딩중...';\n  }\n\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const {\n    0: selectDate,\n    1: setSelectDate\n  } = useState('2021-01-01');\n  const onChangeText = useCallback(e => {\n    setText(e.target.value);\n  }, [text]);\n\n  function getListData(value) {\n    let listData = calendar.filter(v => v.date === value);\n    return listData || [];\n  }\n\n  const onSelect = useCallback(e => {\n    console.log(e.format('YYYY-MM-DD'));\n    setSelectDate(e.format('YYYY-MM-DD'));\n  }, [selectDate]); //temp\n\n  const onPanelChange = () => {\n    console.log('달 페이지 바뀌었음!');\n  }; //temp\n\n\n  const dateCellRender = useCallback(value => {\n    const listData = getListData(value.format('YYYY-MM-DD'));\n    return /*#__PURE__*/_jsx(\"ul\", {\n      style: {\n        paddingInlineStart: '0'\n      },\n      className: \"events\",\n      children: listData.map(item => /*#__PURE__*/_jsx(\"li\", {\n        style: {\n          listStyle: 'none'\n        },\n        children: /*#__PURE__*/_jsx(Badge, {\n          status: \"success\",\n          text: item.content\n        })\n      }, item.content))\n    });\n  }, [calendar]);\n\n  const onChangeCal = (date, dateString) => {\n    setSelectDate(dateString);\n  }; //달력에 추가\n\n\n  const onSubmit = useCallback(() => {\n    const plus = {\n      date: selectDate,\n      type: 'success',\n      content: text\n    }; //임시로 id인덱스 부여, 디비 작업시 id 자동\n\n    console.log(plus);\n    dispatch({\n      type: ADD_CALENDAR_REQUEST,\n      data: plus\n    });\n  }, [selectDate, text, calendar]); //달력에 추가한거 삭제\n\n  const onDelete = useCallback(() => {\n    const deleteData = calendar.filter(e => e.date === selectDate && e.content === text);\n\n    if (deleteData.length) {\n      dispatch({\n        type: REMOVE_CALENDAR_REQUEST,\n        data: {\n          id: deleteData[0].id\n        }\n      });\n    } else {\n      alert(\"날짜 또는 데이터를 확인하세요\");\n    }\n  }, [selectDate, calendar,,\n  /*tempData*/\n  text]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"meta\", {\n        charSet: \"utf-8\"\n      }), /*#__PURE__*/_jsx(\"title\", {\n        children: \"Calendar\"\n      })]\n    }), isLoggedIn && /*#__PURE__*/_jsxs(AppLayout, {\n      children: [/*#__PURE__*/_jsx(Space, {\n        direction: \"horizontal\",\n        children: /*#__PURE__*/_jsx(DatePicker, {\n          style: {\n            marginTop: '10px'\n          },\n          placeholder: selectDate,\n          onChange: onChangeCal\n        })\n      }), /*#__PURE__*/_jsx(Input, {\n        placeholder: \"\\uB2EC\\uB825\\uC5D0 \\uAE30\\uB85D\\uD558\\uC138\\uC694!\",\n        style: {\n          width: '300px',\n          marginTop: '10px'\n        },\n        name: \"text\",\n        value: text,\n        type: \"text\",\n        onChange: onChangeText,\n        required: true\n      }), /*#__PURE__*/_jsx(Button, {\n        style: {\n          marginTop: '10px'\n        },\n        loading: addCalendarLoading,\n        onClick: onSubmit,\n        children: \"\\uC785\\uB825\"\n      }), /*#__PURE__*/_jsx(Button, {\n        style: {\n          marginTop: '10px'\n        },\n        onClick: onDelete,\n        children: \"\\uC0AD\\uC81C\"\n      }), /*#__PURE__*/_jsx(Calendar, {\n        dateCellRender: dateCellRender,\n        onPanelChange: onPanelChange,\n        onSelect: onSelect\n      })]\n    })]\n  });\n};\n/*export const getServerSideProps = wrapper.getServerSideProps( async (context) => {\n  //Brower 에서 요청이 아닌 Front -> Back이므로 쿠키를 전달해줘야 한다.\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = cookie; //요청 헤더에 쿠키 넣기.\n  context.store.dispatch({\n      type: LOAD_MY_INFO_REQUEST,\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});*/\n\n\nexport default AllCalendar;","map":null,"metadata":{},"sourceType":"module"}