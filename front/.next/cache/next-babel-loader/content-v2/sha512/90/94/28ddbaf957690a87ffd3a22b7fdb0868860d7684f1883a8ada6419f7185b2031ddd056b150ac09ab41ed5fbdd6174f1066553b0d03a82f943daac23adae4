{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(logIn),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(logOut),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(signUp),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(upDate),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogIn),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogOut),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignUp),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchUpdate),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(usersSaga);\n\nimport { all, delay, fork, put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_FAILURE, LOG_OUT_SUCCESS, SIGN_UP_REQUEST, SIGN_UP_FAILURE, SIGN_UP_SUCCESS, UPDATE_USER_REQUEST, UPDATE_USER_SUCCESS } from '../reducers/user';\nimport { LOAD_BUCKET_REQUEST } from '../reducers/bucket';\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction logIn(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function logIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(logInAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 8;\n          return put({\n            type: LOAD_BUCKET_REQUEST\n          });\n\n        case 8:\n          _context.next = 15;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 15;\n          return put({\n            type: LOG_IN_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 10]]);\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction logOut() {\n  return _regeneratorRuntime.wrap(function logOut$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(logOutAPI);\n\n        case 3:\n          _context2.next = 5;\n          return put({\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 5:\n          _context2.next = 12;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(_context2.t0);\n          _context2.next = 12;\n          return put({\n            type: LOG_OUT_FAILURE,\n            error: _context2.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 7]]);\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user/signup', data);\n}\n\nfunction signUp(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function signUp$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(signUpAPI, action.data);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 6:\n          _context3.next = 12;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 12;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context3.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction upDateAPI(data) {\n  return axios.put('/user/update', data);\n}\n\nfunction upDate(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function upDate$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(upDateAPI, action.data);\n\n        case 3:\n          result = _context4.sent;\n          _context4.next = 6;\n          return put({\n            type: UPDATE_USER_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context4.next = 12;\n          break;\n\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 12;\n          return put({\n            type: UPDATE_USER_FAILURE,\n            error: _context4.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 8]]);\n} // LogIn\n\n\nfunction watchLogIn() {\n  return _regeneratorRuntime.wrap(function watchLogIn$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeLatest(LOG_IN_REQUEST, logIn);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n} // LogOut\n\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logOut);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n} //Sign Up\n\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n} //Update\n\n\nfunction watchUpdate() {\n  return _regeneratorRuntime.wrap(function watchUpdate$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(UPDATE_USER_REQUEST, upDate);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nexport default function usersSaga() {\n  return _regeneratorRuntime.wrap(function usersSaga$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return all([fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchUpdate)]);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}","map":{"version":3,"sources":["/Users/sol/google/Project/SolarSeed/front/sagas/user.js"],"names":["logIn","logOut","signUp","upDate","watchLogIn","watchLogOut","watchSignUp","watchUpdate","usersSaga","all","delay","fork","put","takeLatest","call","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_FAILURE","LOG_OUT_SUCCESS","SIGN_UP_REQUEST","SIGN_UP_FAILURE","SIGN_UP_SUCCESS","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","LOAD_BUCKET_REQUEST","logInAPI","data","post","action","result","type","console","error","response","logOutAPI","signUpAPI","upDateAPI","UPDATE_USER_FAILURE"],"mappings":"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","sourcesContent":["import { all, delay, fork, put, takeLatest, call} from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_FAILURE, LOG_OUT_SUCCESS, SIGN_UP_REQUEST, SIGN_UP_FAILURE, SIGN_UP_SUCCESS, UPDATE_USER_REQUEST, UPDATE_USER_SUCCESS } from '../reducers/user';\nimport { LOAD_BUCKET_REQUEST } from '../reducers/bucket';\n\n\nfunction logInAPI(data) {\n    return axios.post('/user/login', data);\n}\n\nfunction* logIn(action){\n    try{\n        const result = yield call(logInAPI, action.data);\n        yield put({\n            type: LOG_IN_SUCCESS,\n            data: result.data,\n        });\n        //Bucket Request\n        yield put({\n            type: LOAD_BUCKET_REQUEST,\n        });\n    } catch(err) {\n        console.error(err);\n        yield put({\n            type: LOG_IN_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\nfunction logOutAPI(){\n    return axios.post('/user/logout');\n}\n\nfunction* logOut(){\n    try {\n        yield call(logOutAPI);\n        yield put({\n            type: LOG_OUT_SUCCESS,\n        });\n    } catch (err) {\n        console.error(err);\n        yield put({\n            type: LOG_OUT_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction signUpAPI(data) {\n    return axios.post('/user/signup', data);\n}\n\nfunction* signUp(action){\n    try {\n        const result = yield call(signUpAPI, action.data);\n        yield put({\n            type: SIGN_UP_SUCCESS,\n        });\n    } catch (error) {\n        yield put({\n            type: SIGN_UP_FAILURE,\n            error: error.response.data,\n        });\n    }\n}\n\nfunction upDateAPI(data) {\n    return axios.put('/user/update', data);\n}\n\nfunction* upDate(action) {\n    try {\n        const result = yield call(upDateAPI, action.data);\n        yield put({\n            type: UPDATE_USER_SUCCESS,\n            data: result.data,\n        });\n    } catch (error) {\n        yield put({\n            type: UPDATE_USER_FAILURE,\n            error: error.response.data,\n        });\n    }\n}\n\n// LogIn\nfunction* watchLogIn() {\n    yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n// LogOut\nfunction* watchLogOut() {\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n//Sign Up\nfunction* watchSignUp() {\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n//Update\nfunction* watchUpdate() {\n    yield takeLatest(UPDATE_USER_REQUEST, upDate);\n}\n\n\nexport default function* usersSaga() {\n    yield all ([\n        fork(watchLogIn),\n        fork(watchLogOut),\n        fork(watchSignUp),\n        fork(watchUpdate),\n    ]);\n}"]},"metadata":{},"sourceType":"module"}