{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, put, takeLatest, throttle, call } from 'redux-saga/effects';\nimport { ADD_DIARY_REQUEST, ADD_DIARY_SUCCESS, ADD_DIARY_FAILURE, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, LOAD_DIARY_REQUEST, LOAD_DIARY_SUCCESS, LOAD_DIARY_FAILURE, DELETE_DIARY_REQUEST, DELETE_DIARY_SUCCESS, DELETE_DIARY_FAILURE, UPDATE_DIARY_REQUEST, UPDATE_DIARY_SUCCESS, UPDATE_DIARY_FAILURE } from '../reducers/diary';\n\nfunction uplodaImagesAPI(data) {\n  return axios.post('/diary/images', data);\n}\n\nfunction* uplodaImages(action) {\n  try {\n    const result = yield call(uplodaImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction addDiaryAPI(data) {\n  return axios.post('/diary', data);\n}\n\nfunction* addDiary(action) {\n  try {\n    const result = yield call(addDiaryAPI, action.data);\n    yield put({\n      type: ADD_DIARY_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: ADD_DIARY_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction updateDiaryAPI(data) {\n  return axios.put('/diary/update', data);\n}\n\nfunction* updateDiary(action) {\n  try {\n    const result = yield call(updateDiaryAPI, action.data);\n    yield put({\n      type: UPDATE_DIARY_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: UPDATE_DIARY_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction loadDiaryAPI(data) {\n  return axios.post('/diary/load', data);\n}\n\nfunction* loadDiary(action) {\n  try {\n    const result = yield call(loadDiaryAPI, action.data);\n    yield put({\n      type: LOAD_DIARY_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: LOAD_DIARY_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction deleteDiaryAPI(data) {\n  return axios.delete(`/diary/${data}`);\n}\n\nfunction* deleteDiary(action) {\n  try {\n    const result = yield call(deleteDiaryAPI, action.data);\n    yield put({\n      type: DELETE_DIARY_SUCCESS\n    });\n  } catch (error) {\n    yield put({\n      type: DELETE_DIARY_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uplodaImages);\n}\n\nfunction* watchAddDiary() {\n  yield takeLatest(ADD_DIARY_REQUEST, addDiary);\n}\n\nfunction* watchLoadDiary() {\n  yield takeLatest(LOAD_DIARY_REQUEST, loadDiary);\n}\n\nfunction* watchDeleteDiary() {\n  yield takeLatest(DELETE_DIARY_REQUEST, deleteDiary);\n}\n\nfunction* watchUpdateDiary() {\n  yield takeLatest(UPDATE_DIARY_REQUEST, updateDiary);\n}\n\nexport default function* diarySaga() {\n  yield all([fork(watchUploadImages), fork(watchAddDiary), fork(watchLoadDiary), fork(watchDeleteDiary), fork(watchUpdateDiary)]);\n}","map":null,"metadata":{},"sourceType":"module"}