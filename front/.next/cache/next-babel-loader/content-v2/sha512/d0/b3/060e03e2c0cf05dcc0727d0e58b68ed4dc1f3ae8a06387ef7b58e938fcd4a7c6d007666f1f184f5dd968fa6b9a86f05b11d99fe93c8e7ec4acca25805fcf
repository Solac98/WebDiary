{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, put, takeLatest, call } from 'redux-saga/effects';\nimport { ADD_CALENDAR_FAILURE, ADD_CALENDAR_REQUEST, ADD_CALENDAR_SUCCESS, LOAD_CALENDAR_REQUEST, LOAD_CALENDAR_SUCCESS, REMOVE_CALENDAR_FAILURE, REMOVE_CALENDAR_REQUEST, REMOVE_CALENDAR_SUCCESS } from '../reducers/calendar';\n\nfunction addCalendarAPI(data) {\n  return axios.post('/calendar', data);\n}\n\nfunction* addCalendar(action) {\n  try {\n    const result = yield call(addCalendarAPI, action.data);\n    yield put({\n      type: ADD_CALENDAR_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_CALENDAR_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* watchAddCalendar() {\n  yield takeLatest(ADD_CALENDAR_REQUEST, addCalendar);\n}\n\nfunction loadCalendarAPI(data) {\n  return axios.get('/calendar');\n}\n\nfunction* loadCalendar(action) {\n  try {\n    const result = yield call(loadCalendarAPI, action.data);\n    yield put({\n      type: LOAD_CALENDAR_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_CALENDAR_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* watchLoadCalendar() {\n  yield takeLatest(LOAD_CALENDAR_REQUEST, loadCalendar);\n}\n\nfunction removeCalendarAPI(data) {\n  return axios.delete(`/calendar/${data.id}`);\n}\n\nfunction* removeCalendar(action) {\n  try {\n    const result = yield call(removeCalendarAPI, action.data);\n    yield put({\n      type: REMOVE_CALENDAR_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: REMOVE_CALENDAR_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* watchRemoveCalendar() {\n  yield takeLatest(REMOVE_CALENDAR_REQUEST, removeCalendar);\n}\n\nexport default function* calendarSaga() {\n  yield all([fork(watchAddCalendar), fork(watchLoadCalendar), fork(watchRemoveCalendar)]);\n}","map":{"version":3,"sources":["/Users/sol/Desktop/Project/SolarSeed/front/sagas/calendar.js"],"names":["axios","all","fork","put","takeLatest","call","ADD_CALENDAR_FAILURE","ADD_CALENDAR_REQUEST","ADD_CALENDAR_SUCCESS","LOAD_CALENDAR_REQUEST","LOAD_CALENDAR_SUCCESS","REMOVE_CALENDAR_FAILURE","REMOVE_CALENDAR_REQUEST","REMOVE_CALENDAR_SUCCESS","addCalendarAPI","data","post","addCalendar","action","result","type","error","response","watchAddCalendar","loadCalendarAPI","get","loadCalendar","watchLoadCalendar","removeCalendarAPI","delete","id","removeCalendar","watchRemoveCalendar","calendarSaga"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { all, fork, put, takeLatest, call } from 'redux-saga/effects';\nimport { ADD_CALENDAR_FAILURE, ADD_CALENDAR_REQUEST, ADD_CALENDAR_SUCCESS, LOAD_CALENDAR_REQUEST, LOAD_CALENDAR_SUCCESS, REMOVE_CALENDAR_FAILURE, REMOVE_CALENDAR_REQUEST, REMOVE_CALENDAR_SUCCESS } from '../reducers/calendar';\n\nfunction addCalendarAPI(data){\n    return axios.post('/calendar', data);\n}\n\nfunction* addCalendar(action) {\n    try {\n        const result = yield call(addCalendarAPI, action.data);\n        yield put({\n            type: ADD_CALENDAR_SUCCESS,\n            data: result.data,\n        });\n    } catch (error) {\n        yield put({\n            type: ADD_CALENDAR_FAILURE,\n            error: error.response.data,\n        });\n    }\n}\n\nfunction* watchAddCalendar() {\n    yield takeLatest(ADD_CALENDAR_REQUEST, addCalendar);\n}\n\nfunction loadCalendarAPI(data) {\n    return axios.get('/calendar');\n}\n\nfunction* loadCalendar(action) {\n    try {\n        const result = yield call(loadCalendarAPI, action.data);\n        yield put({\n            type: LOAD_CALENDAR_SUCCESS,\n            data: result.data,\n        });\n    } catch (error) {\n        yield put({\n            type: ADD_CALENDAR_FAILURE,\n            error: error.response.data,\n        });\n    }\n}\n\nfunction* watchLoadCalendar() {\n    yield takeLatest(LOAD_CALENDAR_REQUEST, loadCalendar);\n}\n\nfunction removeCalendarAPI(data) {\n    return axios.delete(`/calendar/${data.id}`);\n}\n\nfunction* removeCalendar(action) {\n    try {\n        const result = yield call(removeCalendarAPI, action.data);\n        yield put({\n            type: REMOVE_CALENDAR_SUCCESS,\n            data: result.data,\n        });\n    } catch (error) {\n        yield put({\n            type: REMOVE_CALENDAR_FAILURE,\n            error: error.response.data,\n        });\n    }\n}\n\nfunction* watchRemoveCalendar() {\n    yield takeLatest(REMOVE_CALENDAR_REQUEST, removeCalendar);\n}\n\nexport default function* calendarSaga (){\n    yield all([\n        fork(watchAddCalendar),\n        fork(watchLoadCalendar),\n        fork(watchRemoveCalendar),\n    ]);\n}"]},"metadata":{},"sourceType":"module"}