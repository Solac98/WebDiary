{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, put, takeLatest, call } from 'redux-saga/effects';\nimport { ADD_CALENDAR_FAILURE, ADD_CALENDAR_REQUEST, ADD_CALENDAR_SUCCESS, LOAD_CALENDAR_REQUEST, LOAD_CALENDAR_SUCCESS, REMOVE_CALENDAR_FAILURE, REMOVE_CALENDAR_REQUEST, REMOVE_CALENDAR_SUCCESS } from '../reducers/calendar';\n\nfunction addCalendarAPI(data) {\n  return axios.post('/calendar', data);\n}\n\nfunction* addCalendar(action) {\n  try {\n    const result = yield call(addCalendarAPI, action.data);\n    yield put({\n      type: ADD_CALENDAR_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_CALENDAR_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* watchAddCalendar() {\n  yield takeLatest(ADD_CALENDAR_REQUEST, addCalendar);\n}\n\nfunction loadCalendarAPI(data) {\n  return axios.get('/calendar');\n}\n\nfunction* loadCalendar(action) {\n  try {\n    const result = yield call(loadCalendarAPI, action.data);\n    yield put({\n      type: LOAD_CALENDAR_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_CALENDAR_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* watchLoadCalendar() {\n  yield takeLatest(LOAD_CALENDAR_REQUEST, loadCalendar);\n}\n\nfunction removeCalendarAPI(data) {\n  return axios.delete(`/calendar/${data.id}`);\n}\n\nfunction* removeCalendar(action) {\n  try {\n    const result = yield call(removeCalendarAPI, action.data);\n    yield put({\n      type: REMOVE_CALENDAR_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: REMOVE_CALENDAR_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* watchRemoveCalendar() {\n  yield takeLatest(REMOVE_CALENDAR_REQUEST, removeCalendar);\n}\n\nexport default function* calendarSaga() {\n  yield all([fork(watchAddCalendar), fork(watchLoadCalendar), fork(watchRemoveCalendar)]);\n}","map":null,"metadata":{},"sourceType":"module"}