{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(uplodaImages),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(addDiary),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(updateDiary),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(loadDiary),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(deleteDiary),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchUploadImages),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddDiary),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadDiary),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(watchDeleteDiary),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchUpdateDiary),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(diarySaga);\n\nimport axios from 'axios';\nimport { all, fork, put, takeLatest, throttle, call } from 'redux-saga/effects';\nimport { ADD_DIARY_REQUEST, ADD_DIARY_SUCCESS, ADD_DIARY_FAILURE, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, LOAD_DIARY_REQUEST, LOAD_DIARY_SUCCESS, LOAD_DIARY_FAILURE, DELETE_DIARY_REQUEST, DELETE_DIARY_SUCCESS, DELETE_DIARY_FAILURE, UPDATE_DIARY_REQUEST, UPDATE_DIARY_SUCCESS, UPDATE_DIARY_FAILURE } from '../reducers/diary';\n\nfunction uplodaImagesAPI(data) {\n  return axios.post('/diary/images', data);\n}\n\nfunction uplodaImages(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function uplodaImages$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(uplodaImagesAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: UPLOAD_IMAGES_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 13;\n          return put({\n            type: UPLOAD_IMAGES_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction addDiaryAPI(data) {\n  return axios.post('/diary', data);\n}\n\nfunction addDiary(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addDiary$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(addDiaryAPI, action.data);\n\n        case 3:\n          result = _context2.sent;\n          _context2.next = 6;\n          return put({\n            type: ADD_DIARY_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context2.next = 13;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(_context2.t0);\n          _context2.next = 13;\n          return put({\n            type: ADD_DIARY_FAILURE,\n            error: _context2.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}\n\nfunction updateDiaryAPI(data) {\n  return axios.put('/diary/update', data);\n}\n\nfunction updateDiary(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function updateDiary$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(updateDiaryAPI, action.data);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: UPDATE_DIARY_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context3.next = 12;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 12;\n          return put({\n            type: UPDATE_DIARY_FAILURE,\n            error: _context3.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction loadDiaryAPI(data) {\n  return axios.post('/diary/load', data);\n}\n\nfunction loadDiary(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadDiary$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(loadDiaryAPI, action.data);\n\n        case 3:\n          result = _context4.sent;\n          _context4.next = 6;\n          return put({\n            type: LOAD_DIARY_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context4.next = 13;\n          break;\n\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.error(_context4.t0);\n          _context4.next = 13;\n          return put({\n            type: LOAD_DIARY_FAILURE,\n            error: _context4.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 8]]);\n}\n\nfunction deleteDiaryAPI(data) {\n  return axios[\"delete\"](\"/diary/\".concat(data));\n}\n\nfunction deleteDiary(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function deleteDiary$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(deleteDiaryAPI, action.data);\n\n        case 3:\n          result = _context5.sent;\n          _context5.next = 6;\n          return put({\n            type: DELETE_DIARY_SUCCESS\n          });\n\n        case 6:\n          _context5.next = 12;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 12;\n          return put({\n            type: DELETE_DIARY_FAILURE,\n            error: _context5.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n}\n\nfunction watchUploadImages() {\n  return _regeneratorRuntime.wrap(function watchUploadImages$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(UPLOAD_IMAGES_REQUEST, uplodaImages);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction watchAddDiary() {\n  return _regeneratorRuntime.wrap(function watchAddDiary$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeLatest(ADD_DIARY_REQUEST, addDiary);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\nfunction watchLoadDiary() {\n  return _regeneratorRuntime.wrap(function watchLoadDiary$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(LOAD_DIARY_REQUEST, loadDiary);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction watchDeleteDiary() {\n  return _regeneratorRuntime.wrap(function watchDeleteDiary$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeLatest(DELETE_DIARY_REQUEST, deleteDiary);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\n\nfunction watchUpdateDiary() {\n  return _regeneratorRuntime.wrap(function watchUpdateDiary$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(UPDATE_DIARY_REQUEST, updateDiary);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nexport default function diarySaga() {\n  return _regeneratorRuntime.wrap(function diarySaga$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return all([fork(watchUploadImages), fork(watchAddDiary), fork(watchLoadDiary), fork(watchDeleteDiary), fork(watchUpdateDiary)]);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}","map":null,"metadata":{},"sourceType":"module"}