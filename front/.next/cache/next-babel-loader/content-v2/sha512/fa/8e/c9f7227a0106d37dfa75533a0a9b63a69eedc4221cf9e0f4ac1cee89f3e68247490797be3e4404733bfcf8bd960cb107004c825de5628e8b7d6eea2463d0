{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sol/google/Project/SolarSeed/front/pages/profile.js\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport AppLayout from '../components/AppLayout';\nimport Head from 'next/head';\nimport { Card, Avatar, Button } from 'antd';\nimport styled from 'styled-components';\nimport EditUser from '../components/EditUser';\nimport EditBucket from '../components/EditBucket';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Router from 'next/router';\nimport { LOG_OUT_REQUEST, LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport { LOAD_BUCKET_REQUEST } from '../reducers/bucket';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport wrapper from '../store/configureStore';\nconst CenterDiv = styled.div.withConfig({\n  displayName: \"profile__CenterDiv\",\n  componentId: \"u1xmpn-0\"\n})([\"width:75%;margin:0 auto;\"]);\nconst CustomCard = styled(Card).withConfig({\n  displayName: \"profile__CustomCard\",\n  componentId: \"u1xmpn-1\"\n})([\"margin-top:20px;\"]);\n\nconst Profile = () => {\n  const {\n    isLoggedIn,\n    user\n  } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!isLoggedIn) {\n      Router.push('/login');\n    }\n  }, [isLoggedIn]);\n\n  if (!isLoggedIn) {\n    return '내 정보 로딩중...';\n  }\n\n  const {\n    0: value,\n    1: setValue\n  } = useState(false); //정보 수정 클릭\n\n  const onClickUser = useCallback(() => {\n    setValue(false);\n  }, [value]); //버킷리스트 수정 클릭\n\n  const onClickBucket = useCallback(e => {\n    dispatch({\n      type: LOAD_BUCKET_REQUEST\n    });\n    setValue(true);\n  }, [value]); //로그아웃 클릭\n\n  const onLogOut = useCallback(() => {\n    dispatch({\n      type: LOG_OUT_REQUEST\n    });\n    Router.push('/');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n        charSet: \"utf-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(AppLayout, {\n      children: /*#__PURE__*/_jsxDEV(CenterDiv, {\n        children: [/*#__PURE__*/_jsxDEV(CustomCard, {\n          actions: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: onClickUser,\n            children: [\"\\uC815\\uBCF4 \\uC218\\uC815\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 76\n            }, this)]\n          }, \"twit\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: onClickBucket,\n            children: [\"\\uBC84\\uD0B7\\uB9AC\\uC2A4\\uD2B8 \\uAD00\\uB9AC\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 87\n            }, this)]\n          }, \"followings\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this)],\n          children: [/*#__PURE__*/_jsxDEV(Card.Meta, {\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 41\n            }, this),\n            title: user.nickname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onLogOut,\n            children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), value ? /*#__PURE__*/_jsxDEV(EditBucket, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 35\n        }, this) : /*#__PURE__*/_jsxDEV(EditUser, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 52\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true);\n}; //SSR 적용 - getServerSidProps 사용\n\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  //Brower 에서 요청이 아닌 Front -> Back이므로 쿠키를 전달해줘야 한다.\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = cookie; //요청 헤더에 쿠키 넣기.\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Profile;","map":{"version":3,"sources":["/Users/sol/google/Project/SolarSeed/front/pages/profile.js"],"names":["React","useState","useCallback","useEffect","AppLayout","Head","Card","Avatar","Button","styled","EditUser","EditBucket","useSelector","useDispatch","Router","LOG_OUT_REQUEST","LOAD_MY_INFO_REQUEST","LOAD_BUCKET_REQUEST","axios","END","wrapper","CenterDiv","div","CustomCard","Profile","isLoggedIn","user","state","dispatch","push","value","setValue","onClickUser","onClickBucket","e","type","onLogOut","nickname","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect} from 'react';\nimport AppLayout from '../components/AppLayout';\nimport Head from 'next/head';\nimport { Card, Avatar, Button } from 'antd';\nimport styled from 'styled-components';\nimport EditUser from '../components/EditUser';\nimport EditBucket from '../components/EditBucket';\nimport { useSelector, useDispatch} from 'react-redux';\nimport Router from 'next/router';\nimport { LOG_OUT_REQUEST, LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport { LOAD_BUCKET_REQUEST } from '../reducers/bucket';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport wrapper from '../store/configureStore';\n\nconst CenterDiv = styled.div`\n    width: 75%;\n    margin : 0 auto;\n`;\n\nconst CustomCard = styled(Card)`\n    margin-top: 20px;\n`;\n\nconst Profile = () => {\n    const{ isLoggedIn, user } = useSelector((state) => state.user);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if(!isLoggedIn){\n            Router.push('/login');\n        }\n    }, [isLoggedIn]);\n\n    if (!isLoggedIn) {\n        return '내 정보 로딩중...';\n    }\n\n    const [value, setValue] = useState(false);\n    //정보 수정 클릭\n    const onClickUser = useCallback(() => {\n        setValue(false);\n    }, [value]);\n    //버킷리스트 수정 클릭\n    const onClickBucket = useCallback((e) => {\n        dispatch({\n            type: LOAD_BUCKET_REQUEST,\n        });\n        setValue(true);\n    }, [value]);\n    //로그아웃 클릭\n    const onLogOut = useCallback(() => {\n        dispatch({\n            type: LOG_OUT_REQUEST,\n        });\n        Router.push('/');\n    }, []);\n\n    return (\n        <>\n            <Head>\n                <meta charSet=\"utf-8\"/>\n                <title>Profile</title>\n            </Head>\n                { isLoggedIn && <AppLayout>\n                    <CenterDiv>\n                        <CustomCard\n                            actions={[\n                                <div onClick={onClickUser} key=\"twit\">정보 수정<br/></div>,\n                                <div onClick={onClickBucket} key=\"followings\">버킷리스트 관리<br/></div>,\n                            ]}>\n                            <Card.Meta\n                                avatar={<Avatar></Avatar>}\n                                title={user.nickname} />\n                            <Button onClick={onLogOut}>로그아웃</Button>\n                        </CustomCard>\n                        { value ? <EditBucket /> : <EditUser /> }\n                    </CenterDiv>\n                </AppLayout>}\n        </>\n        )\n}\n\n//SSR 적용 - getServerSidProps 사용\nexport const getServerSideProps = wrapper.getServerSideProps( async (context) => {\n    //Brower 에서 요청이 아닌 Front -> Back이므로 쿠키를 전달해줘야 한다.\n    const cookie = context.req ? context.req.headers.cookie : '';\n    axios.defaults.headers.Cookie = cookie; //요청 헤더에 쿠키 넣기.\n    context.store.dispatch({\n        type: LOAD_MY_INFO_REQUEST,\n    });\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n});\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}