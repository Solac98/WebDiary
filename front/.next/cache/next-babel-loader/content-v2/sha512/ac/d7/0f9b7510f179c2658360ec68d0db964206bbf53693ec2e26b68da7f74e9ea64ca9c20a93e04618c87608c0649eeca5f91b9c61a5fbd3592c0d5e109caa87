{"ast":null,"code":"import produce from '../util/produce'; //bucket 더미 데이터\n\nexport var initialState = {\n  post: {\n    Images: []\n  },\n  imagePaths: [],\n  removeImage: [],\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n  addDiaryLoading: false,\n  addDiaryDone: false,\n  addDiaryError: null,\n  loadDiaryLoading: false,\n  loadDiaryDone: false,\n  loadDiaryError: null,\n  deleteDiaryLoading: false,\n  deleteDiaryDone: false,\n  deleteDiaryError: null\n};\nexport var DELETE_DIARY_REQUEST = 'DELETE_DIARY_REQUEST'; // 액션의 이름\n\nexport var DELETE_DIARY_SUCCESS = 'DELETE_DIARY_SUCCESS'; // 액션의 이름\n\nexport var DELETE_DIARY_FAILURE = 'DELETE_DIARY_FAILURE';\nexport var DELETE_DIARY_RESET = 'DELETE_DIARY_RESET';\nexport var UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST'; // 액션의 이름\n\nexport var UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS'; // 액션의 이름\n\nexport var UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE'; // 액션의 이름\n\nexport var LOAD_DIARY_REQUEST = 'LOAD_DIARY_REQUEST'; // 액션의 이름\n\nexport var LOAD_DIARY_SUCCESS = 'LOAD_DIARY_SUCCESS'; // 액션의 이름\n\nexport var LOAD_DIARY_FAILURE = 'LOAD_DIARY_FAILURE'; // 액션의 이름\n\nexport var ADD_DIARY_REQUEST = 'ADD_DIARY_REQUEST'; // 액션의 이름\n\nexport var ADD_DIARY_SUCCESS = 'ADD_DIARY_SUCCESS'; // 액션의 이름\n\nexport var ADD_DIARY_FAILURE = 'ADD_DIARY_FAILURE'; // 액션의 이름\n\nexport var LOG_OUT_REQUEST = 'LOG_OUT_REQUEST'; // 액션의 이름\n\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS'; // 액션의 이름\n\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'; // 액션의 이름\n\nexport var REMOVE_IMAGE = 'REMOVE_IMAGE'; //현재는 REQUEST에서 SUCCESS역활까지 하고있음, saga작성 시 구분하기!\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case DELETE_DIARY_RESET:\n        {\n          draft.deleteDiaryDone = false;\n        }\n\n      case DELETE_DIARY_REQUEST:\n        {\n          draft.deleteDiaryLoading = true;\n          draft.deleteDiaryDone = false;\n          draft.deleteDiaryError = null;\n          break;\n        }\n\n      case DELETE_DIARY_SUCCESS:\n        {\n          draft.post = {\n            Images: []\n          };\n          draft.imagePaths = [];\n          draft.deleteDiaryLoading = false;\n          draft.deleteDiaryDone = true;\n          break;\n        }\n\n      case DELETE_DIARY_FAILURE:\n        {\n          draft.deleteDiaryLoading = false;\n          draft.deleteDiaryError = action.error;\n          break;\n        }\n\n      case REMOVE_IMAGE:\n        draft.imagePaths = draft.imagePaths.filter(function (v, i) {\n          return i !== action.data;\n        });\n        break;\n\n      case LOG_OUT_SUCCESS:\n        //Logout - Reset DiaryData\n        draft.post = {\n          Images: []\n        };\n        draft.imagePaths = [];\n\n      case UPLOAD_IMAGES_REQUEST:\n        {\n          draft.uploadImagesLoading = true;\n          draft.uploadImagesDone = false;\n          draft.uploadImagesError = null;\n          break;\n        }\n\n      case UPLOAD_IMAGES_SUCCESS:\n        {\n          draft.imagePaths = action.data;\n          draft.uploadImagesLoading = false;\n          draft.uploadImagesDone = true;\n          break;\n        }\n\n      case UPLOAD_IMAGES_FAILURE:\n        {\n          draft.uploadImagesLoading = false;\n          draft.uploadImagesError = action.error;\n          break;\n        }\n\n      case LOAD_DIARY_REQUEST:\n        {\n          draft.loadDiaryLoading = true;\n          draft.loadDiaryDone = false;\n          draft.loadDiaryError = null;\n          break;\n        }\n\n      case LOAD_DIARY_SUCCESS:\n        {\n          draft.loadDiaryLoading = false;\n          draft.loadDiaryDone = true;\n          draft.post = action.data;\n          break;\n        }\n\n      case LOAD_DIARY_FAILURE:\n        {\n          draft.loadDiaryLoading = false;\n          draft.loadDiaryError = action.error;\n          break;\n        }\n\n      case ADD_DIARY_REQUEST:\n        {\n          draft.addDiaryLoading = true;\n          draft.addDiaryDone = false;\n          draft.addDiaryError = null;\n          break;\n        }\n\n      case ADD_DIARY_SUCCESS:\n        {\n          draft.addDiaryLoading = false;\n          draft.addDiaryDone = true;\n          draft.post = action.data;\n          break;\n        }\n\n      case ADD_DIARY_FAILURE:\n        {\n          draft.addDiaryLoading = false;\n          draft.addDiaryError = action.error;\n          break;\n        }\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/sol/google/Project/SolarSeed/front/reducers/diary.js"],"names":["produce","initialState","post","Images","imagePaths","removeImage","uploadImagesLoading","uploadImagesDone","uploadImagesError","addDiaryLoading","addDiaryDone","addDiaryError","loadDiaryLoading","loadDiaryDone","loadDiaryError","deleteDiaryLoading","deleteDiaryDone","deleteDiaryError","DELETE_DIARY_REQUEST","DELETE_DIARY_SUCCESS","DELETE_DIARY_FAILURE","DELETE_DIARY_RESET","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","LOAD_DIARY_REQUEST","LOAD_DIARY_SUCCESS","LOAD_DIARY_FAILURE","ADD_DIARY_REQUEST","ADD_DIARY_SUCCESS","ADD_DIARY_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","REMOVE_IMAGE","reducer","state","action","draft","type","error","filter","v","i","data"],"mappings":"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","sourcesContent":["import produce from '../util/produce';\n\n//bucket 더미 데이터\n\nexport const initialState = {\n    post: {\n        Images: [],\n    },\n    imagePaths: [],\n    removeImage: [],\n    uploadImagesLoading: false,\n    uploadImagesDone: false,\n    uploadImagesError: null,\n\n    addDiaryLoading: false,\n    addDiaryDone: false,\n    addDiaryError: null,\n\n    loadDiaryLoading: false,\n    loadDiaryDone: false,\n    loadDiaryError: null,\n\n    deleteDiaryLoading: false,\n    deleteDiaryDone: false,\n    deleteDiaryError: null,\n};\n\nexport const DELETE_DIARY_REQUEST = 'DELETE_DIARY_REQUEST'; // 액션의 이름\nexport const DELETE_DIARY_SUCCESS = 'DELETE_DIARY_SUCCESS'; // 액션의 이름\nexport const DELETE_DIARY_FAILURE = 'DELETE_DIARY_FAILURE';\nexport const DELETE_DIARY_RESET = 'DELETE_DIARY_RESET';\n\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST'; // 액션의 이름\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS'; // 액션의 이름\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE'; // 액션의 이름\n\nexport const LOAD_DIARY_REQUEST = 'LOAD_DIARY_REQUEST'; // 액션의 이름\nexport const LOAD_DIARY_SUCCESS = 'LOAD_DIARY_SUCCESS'; // 액션의 이름\nexport const LOAD_DIARY_FAILURE = 'LOAD_DIARY_FAILURE'; // 액션의 이름\n\nexport const ADD_DIARY_REQUEST = 'ADD_DIARY_REQUEST'; // 액션의 이름\nexport const ADD_DIARY_SUCCESS = 'ADD_DIARY_SUCCESS'; // 액션의 이름\nexport const ADD_DIARY_FAILURE = 'ADD_DIARY_FAILURE'; // 액션의 이름\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST'; // 액션의 이름\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS'; // 액션의 이름\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'; // 액션의 이름\n\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\n\n\n//현재는 REQUEST에서 SUCCESS역활까지 하고있음, saga작성 시 구분하기!\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\n    switch(action.type){\n        case DELETE_DIARY_RESET: {\n            draft.deleteDiaryDone = false;\n        }\n        case DELETE_DIARY_REQUEST: {\n            draft.deleteDiaryLoading = true;\n            draft.deleteDiaryDone = false;\n            draft.deleteDiaryError = null;\n            break;\n        }\n        case DELETE_DIARY_SUCCESS: {\n            draft.post = {\n                Images: [],\n            };\n            draft.imagePaths = [];\n            draft.deleteDiaryLoading = false;\n            draft.deleteDiaryDone = true;\n            break;\n        }\n        case DELETE_DIARY_FAILURE: {\n            draft.deleteDiaryLoading = false;\n            draft.deleteDiaryError = action.error;\n            break;\n        }\n        case REMOVE_IMAGE:\n            draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\n            break;\n        case LOG_OUT_SUCCESS://Logout - Reset DiaryData\n            draft.post = {\n                Images: [],\n            };\n            draft.imagePaths = [];\n        case UPLOAD_IMAGES_REQUEST: {\n            draft.uploadImagesLoading = true;\n            draft.uploadImagesDone = false;\n            draft.uploadImagesError = null;\n            break;\n        }\n        case UPLOAD_IMAGES_SUCCESS: {\n            draft.imagePaths = action.data;\n            draft.uploadImagesLoading = false;\n            draft.uploadImagesDone = true;\n            break;\n        }\n        case UPLOAD_IMAGES_FAILURE: {\n            draft.uploadImagesLoading = false;\n            draft.uploadImagesError = action.error;\n            break;\n        }\n        case LOAD_DIARY_REQUEST:{\n            draft.loadDiaryLoading = true;\n            draft.loadDiaryDone = false;\n            draft.loadDiaryError = null;\n            break;\n        }\n        case LOAD_DIARY_SUCCESS:{\n            draft.loadDiaryLoading = false;\n            draft.loadDiaryDone = true;\n            draft.post = action.data;\n            break;\n        }\n        case LOAD_DIARY_FAILURE:{\n            draft.loadDiaryLoading = false;\n            draft.loadDiaryError = action.error;\n            break;\n        }\n        case ADD_DIARY_REQUEST:{\n            draft.addDiaryLoading = true;\n            draft.addDiaryDone = false;\n            draft.addDiaryError = null;            \n            break;\n        }\n        case ADD_DIARY_SUCCESS:{\n            draft.addDiaryLoading = false;\n            draft.addDiaryDone = true;\n            draft.post = action.data;\n            break;\n        }\n        case ADD_DIARY_FAILURE:{\n            draft.addDiaryLoading = false;\n            draft.addDiaryError = action.error;\n            break;\n        }\n    }\n})\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}