{"ast":null,"code":"import produce from '../util/produce';\nexport const initialState = {\n  isLoggedIn: false,\n  // Log or Not Log\n  isLogLoading: false,\n  // Login Lodaing\n  isLogError: null,\n  //LogIn Error\n  isSignUpDone: false,\n  // Sign Up Done\n  isSignUpLoading: false,\n  // Sign Up Loading\n  isSignUpError: null,\n  // Sign Up Error\n  isUpdateDone: false,\n  // UPdate Done\n  isUpdateLoading: false,\n  // UPdate Loading\n  isUpdateError: null,\n  // UPdate Error\n  isLoadMyInfoDone: false,\n  // Load My Info Done\n  isLoadMyInfoLoading: false,\n  // Load My Info Loading\n  isLoadMyInfoError: null,\n  // Load My Info Error\n  user: null // User Info\n\n};\nexport const LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST'; // 액션의 이름\n\nexport const LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS'; // 액션의 이름\n\nexport const LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE'; // 액션의 이름\n\nexport const UPDATE_USER_REQUEST = 'UPDATE_USER_REQUEST'; // 액션의 이름\n\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS'; // 액션의 이름\n\nexport const UPDATE_USER_FAILURE = 'UPDATE_USER_FAILURE'; // 액션의 이름\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'; // 액션의 이름\n\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\n\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST'; // 액션의 이름\n\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS'; // 액션의 이름\n\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'; // 액션의 이름\n\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST'; // 액션의 이름\n\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS'; // 액션의 이름\n\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE'; // 액션의 이름\n\nexport const SIGN_UP_RESET = 'SIGN_UP_RESET'; // 액션의 이름\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    // Load My Info\n    case LOAD_MY_INFO_REQUEST:\n      {\n        draft.isLoadMyInfoLoading = true; // LoadMyInfo Loading On\n\n        draft.isLoadMyInfoError = null;\n        draft.isLoadMyInfoDone = false;\n        break;\n      }\n\n    case LOAD_MY_INFO_SUCCESS:\n      {\n        draft.isLoadMyInfoLoading = false; //LoadMyInfo Loading Off\n\n        draft.isLoadMyInfoDone = true;\n        draft.user = action.data; // IsUser -> Insert User Data, Not -> Insert Null\n\n        break;\n      }\n\n    case LOAD_MY_INFO_FAILURE:\n      {\n        draft.isLoadMyInfoLoading = false; //LoadMyInfo Loading Off\n\n        draft.isLoadMyInfoError = action.error; // Error Insert\n\n        break;\n      }\n    // Update\n\n    case UPDATE_USER_REQUEST:\n      {\n        draft.isUpdateLoading = true; // Update Loading On\n\n        break;\n      }\n\n    case UPDATE_USER_SUCCESS:\n      {\n        draft.isUpdateLoading = false; //Update Loading Off\n\n        draft.user = action.data; // UserData Insert\n\n        break;\n      }\n\n    case UPDATE_USER_FAILURE:\n      {\n        draft.isUpdateLoading = false; //Update Loading Off\n\n        draft.isUpdateError = action.error; // Error Insert\n\n        break;\n      }\n    // Login\n\n    case LOG_IN_REQUEST:\n      {\n        draft.isLogLoading = true; // LogIn Loading On\n\n        break;\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        draft.isLogLoading = false; //LogIn Loading Off\n\n        draft.isLoggedIn = true; //LogIn Done\n\n        draft.user = action.data; // UserData Insert\n\n        break;\n      }\n\n    case LOG_IN_FAILURE:\n      {\n        draft.isLogLoading = false; //LogIn Loading Off\n\n        draft.isLogError = action.error; // Error Insert\n\n        break;\n      }\n    // Logout\n\n    case LOG_OUT_REQUEST:\n      {\n        draft.isLogLoading = true; // LogIn Loading On\n\n        break;\n      }\n\n    case LOG_OUT_SUCCESS:\n      {\n        draft.isLogLoading = false; //LogIn Loading Off\n\n        draft.isLoggedIn = false; //LogIn Done\n\n        draft.user = null; // UserData Insert\n\n        break;\n      }\n\n    case LOG_OUT_FAILURE:\n      {\n        draft.isLogLoading = false; //LogIn Loading Off\n\n        draft.isLogError = action.data; // Error Insert\n\n        break;\n      }\n    // Sign Up\n\n    case SIGN_UP_REQUEST:\n      {\n        draft.isSignUpLoading = true; // SignUp Loading On\n\n        draft.isSignUpError = null; // SignUp Error Null\n\n        break;\n      }\n\n    case SIGN_UP_SUCCESS:\n      {\n        draft.isSignUpDone = true; // SignUp Done On\n\n        draft.isSignUpLoading = false; //SignUp Loading Off\n\n        break;\n      }\n\n    case SIGN_UP_FAILURE:\n      {\n        draft.isSignUpLoading = false; //SignUp Loading Off\n\n        draft.isSignUpError = action.error; // Error Insert\n\n        break;\n      }\n\n    case SIGN_UP_RESET:\n      {\n        draft.isSignUpDone = false; //SignUp Done Null\n\n        break;\n      }\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["/Users/sol/google/Project/SolarSeed/front/reducers/user.js"],"names":["produce","initialState","isLoggedIn","isLogLoading","isLogError","isSignUpDone","isSignUpLoading","isSignUpError","isUpdateDone","isUpdateLoading","isUpdateError","isLoadMyInfoDone","isLoadMyInfoLoading","isLoadMyInfoError","user","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_RESET","reducer","state","action","draft","type","data","error"],"mappings":"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","sourcesContent":["import produce from '../util/produce';\n\n  export const initialState = {\n      isLoggedIn: false,// Log or Not Log\n      isLogLoading: false, // Login Lodaing\n      isLogError: null, //LogIn Error\n      isSignUpDone: false, // Sign Up Done\n      isSignUpLoading: false,// Sign Up Loading\n      isSignUpError: null,// Sign Up Error\n      isUpdateDone: false, // UPdate Done\n      isUpdateLoading: false,// UPdate Loading\n      isUpdateError: null,// UPdate Error\n      isLoadMyInfoDone: false, // Load My Info Done\n      isLoadMyInfoLoading: false,// Load My Info Loading\n      isLoadMyInfoError: null,// Load My Info Error\n\n      user: null,// User Info\n  };\n\nexport const LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST'; // 액션의 이름\nexport const LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS'; // 액션의 이름\nexport const LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE'; // 액션의 이름\n\nexport const UPDATE_USER_REQUEST = 'UPDATE_USER_REQUEST'; // 액션의 이름\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS'; // 액션의 이름\nexport const UPDATE_USER_FAILURE = 'UPDATE_USER_FAILURE'; // 액션의 이름\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'; // 액션의 이름\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST'; // 액션의 이름\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS'; // 액션의 이름\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'; // 액션의 이름\n\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST'; // 액션의 이름\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS'; // 액션의 이름\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE'; // 액션의 이름\nexport const SIGN_UP_RESET = 'SIGN_UP_RESET'; // 액션의 이름\n\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\n    switch(action.type){\n        // Load My Info\n        case LOAD_MY_INFO_REQUEST:{\n            draft.isLoadMyInfoLoading = true; // LoadMyInfo Loading On\n            draft.isLoadMyInfoError = null;\n            draft.isLoadMyInfoDone = false;\n            break;\n        }\n        case LOAD_MY_INFO_SUCCESS: {\n            draft.isLoadMyInfoLoading = false; //LoadMyInfo Loading Off\n            draft.isLoadMyInfoDone = true;\n            draft.user = action.data; // IsUser -> Insert User Data, Not -> Insert Null\n            break;\n        }\n        case LOAD_MY_INFO_FAILURE: {\n            draft.isLoadMyInfoLoading = false; //LoadMyInfo Loading Off\n            draft.isLoadMyInfoError = action.error;// Error Insert\n            break;\n        }\n        // Update\n        case UPDATE_USER_REQUEST:{\n            draft.isUpdateLoading = true; // Update Loading On\n            break;\n        }\n        case UPDATE_USER_SUCCESS: {\n            draft.isUpdateLoading = false; //Update Loading Off\n            draft.user = action.data; // UserData Insert\n            break;\n        }\n        case UPDATE_USER_FAILURE: {\n            draft.isUpdateLoading = false; //Update Loading Off\n            draft.isUpdateError = action.error;// Error Insert\n            break;\n        }\n        // Login\n        case LOG_IN_REQUEST:{\n            draft.isLogLoading = true; // LogIn Loading On\n            break;\n        }\n        case LOG_IN_SUCCESS: {\n            draft.isLogLoading = false; //LogIn Loading Off\n            draft.isLoggedIn = true; //LogIn Done\n            draft.user = action.data; // UserData Insert\n            break;\n        }\n        case LOG_IN_FAILURE: {\n            draft.isLogLoading = false; //LogIn Loading Off\n            draft.isLogError = action.error;// Error Insert\n            break;\n        }\n        // Logout\n        case LOG_OUT_REQUEST:{\n            draft.isLogLoading = true; // LogIn Loading On\n            break;\n        }\n        case LOG_OUT_SUCCESS: {\n            draft.isLogLoading = false; //LogIn Loading Off\n            draft.isLoggedIn = false; //LogIn Done\n            draft.user = null; // UserData Insert\n            break;\n        }\n        case LOG_OUT_FAILURE: {\n            draft.isLogLoading = false; //LogIn Loading Off\n            draft.isLogError = action.data;// Error Insert\n            break;\n        }\n        // Sign Up\n        case SIGN_UP_REQUEST:{\n            draft.isSignUpLoading = true; // SignUp Loading On\n            draft.isSignUpError = null; // SignUp Error Null\n            break;\n        }\n        case SIGN_UP_SUCCESS: {\n            draft.isSignUpDone = true; // SignUp Done On\n            draft.isSignUpLoading = false; //SignUp Loading Off\n            break;\n        }\n        case SIGN_UP_FAILURE: {\n            draft.isSignUpLoading = false; //SignUp Loading Off\n            draft.isSignUpError = action.error;// Error Insert\n            break;\n        }\n        case SIGN_UP_RESET: {\n            draft.isSignUpDone = false; //SignUp Done Null\n            break;\n        }\n    }\n})\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}