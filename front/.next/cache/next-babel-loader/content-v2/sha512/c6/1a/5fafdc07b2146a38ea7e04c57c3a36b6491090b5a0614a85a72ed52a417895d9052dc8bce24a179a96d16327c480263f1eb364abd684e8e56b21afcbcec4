{"ast":null,"code":"import produce from '../util/produce'; //bucket 더미 데이터\n\nexport const initialState = {\n  bucket: [],\n  addBucketLoading: false,\n  addBucketDone: false,\n  addBucketError: null,\n  loadBucketLoading: false,\n  loadBucketDone: false,\n  loadBucketError: null,\n  removeBucketLoading: false,\n  removeBucketDone: false,\n  removeBucketError: null\n};\nexport const LOAD_BUCKET_REQUEST = 'LOAD_BUCKET_REQUEST'; // 액션의 이름\n\nexport const LOAD_BUCKET_SUCCESS = 'LOAD_BUCKET_SUCCESS'; // 액션의 이름\n\nexport const LOAD_BUCKET_FAILURE = 'LOAD_BUCKET_FAILURE'; // 액션의 이름\n\nexport const ADD_BUCKET_REQUEST = 'ADD_BUCKET_REQUEST'; // 액션의 이름\n\nexport const ADD_BUCKET_SUCCESS = 'ADD_BUCKET_SUCCESS'; // 액션의 이름\n\nexport const ADD_BUCKET_FAILURE = 'ADD_BUCKET_FAILURE'; // 액션의 이름\n\nexport const REMOVE_BUCKET_REQUEST = 'REMOVE_BUCKET_REQUEST'; // 액션의 이름\n\nexport const REMOVE_BUCKET_SUCCESS = 'REMOVE_BUCKET_SUCCESS'; // 액션의 이름\n\nexport const REMOVE_BUCKET_FAILURE = 'REMOVE_BUCKET_FAILURE'; // 액션의 이름\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST'; // 액션의 이름\n\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS'; // 액션의 이름\n\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'; // 액션의 이름\n//현재는 REQUEST에서 SUCCESS역활까지 하고있음, saga작성 시 구분하기!\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOAD_BUCKET_REQUEST:\n      {\n        draft.loadBucketDone = false;\n        draft.loadBucketLoading = true;\n        draft.loadBucketError = null;\n        break;\n      }\n\n    case LOAD_BUCKET_SUCCESS:\n      {\n        draft.bucket = action.data;\n        draft.loadBucketDone = true;\n        draft.loadBucketLoading = false;\n        break;\n      }\n\n    case LOAD_BUCKET_FAILURE:\n      {\n        draft.loadBucketLoading = false;\n        draft.loadBucketError = action.error;\n        break;\n      }\n\n    case ADD_BUCKET_REQUEST:\n      {\n        draft.addBucketDone = false;\n        draft.addBucketLoading = true;\n        draft.addBucketError = null;\n        break;\n      }\n\n    case ADD_BUCKET_SUCCESS:\n      {\n        draft.bucket.push(action.data);\n        draft.addBucketDone = true;\n        draft.addBucketLoading = false;\n        break;\n      }\n\n    case ADD_BUCKET_FAILURE:\n      {\n        draft.addBucketLoading = false;\n        draft.addBucketError = action.error;\n        break;\n      }\n\n    case REMOVE_BUCKET_REQUEST:\n      {\n        draft.removeBucketDone = false;\n        draft.removeBucketLoading = true;\n        draft.removeBucketError = null;\n        break;\n      }\n\n    case REMOVE_BUCKET_SUCCESS:\n      {\n        draft.bucket = draft.bucket.filter(v => v.id !== action.data.id);\n        draft.removeBucketDone = true;\n        draft.removeBucketLoading = false;\n        break;\n      }\n\n    case REMOVE_BUCKET_FAILURE:\n      {\n        draft.removeBucketLoading = false;\n        draft.removeBucketError = action.error;\n        break;\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        console.log(\"LOG_OUT_REQUEST\"); //draft.bucket = null;\n\n        break;\n      }\n  }\n});\n\nexport default reducer;","map":null,"metadata":{},"sourceType":"module"}