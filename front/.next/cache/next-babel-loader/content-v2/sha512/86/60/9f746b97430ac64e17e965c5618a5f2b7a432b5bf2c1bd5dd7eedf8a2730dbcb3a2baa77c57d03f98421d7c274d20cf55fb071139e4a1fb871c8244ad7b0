{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sol/google/Project/SolarSeed/front/pages/login.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport 'antd/dist/antd.css';\nimport styled from 'styled-components';\nimport LoginForm from '../components/LoginForm';\nimport Router from 'next/router';\nimport { useSelector } from 'react-redux';\nimport React, { useEffect } from 'react';\nvar CustomDiv = styled.div.withConfig({\n  displayName: \"login__CustomDiv\",\n  componentId: \"sc-1w8is3l-0\"\n})([\"position:absolute;top:0;left:0;width:100%;height:100%;background:url(https://images.unsplash.com/photo-1508253640504-9096edc75163?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1651&q=80);background-size:cover;\"]);\n_c = CustomDiv;\n\nvar Login = function Login() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      isLoggedIn = _useSelector.isLoggedIn;\n\n  useEffect(function () {\n    if (isLoggedIn) {\n      Router.push('/');\n    }\n  }, [isLoggedIn]); //\n\n  return /*#__PURE__*/_jsxDEV(CustomDiv, {\n    children: /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, _this);\n}; //SSR 적용 - getServerSidProps 사용\n\n\n_s(Login, \"J2iGk1RIxEq1LJLY6G50jmV6JKc=\", false, function () {\n  return [useSelector];\n});\n\n_c2 = Login;\nexport var __N_SSP = true;\nexport default Login;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomDiv\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"sources":["/Users/sol/google/Project/SolarSeed/front/pages/login.js"],"names":["styled","LoginForm","Router","useSelector","React","useEffect","CustomDiv","div","Login","state","user","isLoggedIn","push"],"mappings":";;;;;;AAAA,OAAO,oBAAP;AACA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AAKA,IAAMC,SAAS,GAAGN,MAAM,CAACO,GAAV;AAAA;AAAA;AAAA,qQAAf;KAAMD,S;;AAUN,IAAME,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAAA,qBACML,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CADjB;AAAA,MACTC,UADS,gBACTA,UADS;;AAEhBN,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAGM,UAAH,EAAc;AACVT,MAAAA,MAAM,CAACU,IAAP,CAAY,GAAZ;AACH;AACJ,GAJQ,EAIN,CAACD,UAAD,CAJM,CAAT,CAFgB,CAOhB;;AACA,sBACI,QAAC,SAAD;AAAA,2BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CAbD,C,CAeA;;;GAfMH,K;UACoBL,W;;;MADpBK,K;;AA2BN,eAAeA,KAAf","sourcesContent":["import 'antd/dist/antd.css';\nimport styled from 'styled-components';\nimport LoginForm from '../components/LoginForm';\nimport Router from 'next/router';\nimport { useSelector } from 'react-redux'; \nimport React, { useEffect} from 'react';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport wrapper from '../store/configureStore';\n\nconst CustomDiv = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: url(https://images.unsplash.com/photo-1508253640504-9096edc75163?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1651&q=80);\n  background-size: cover;\n`;\n\nconst Login = () => {\n    const{ isLoggedIn } = useSelector((state) => state.user);\n    useEffect(() => {\n        if(isLoggedIn){\n            Router.push('/');\n        }\n    }, [isLoggedIn]);\n    //\n    return (\n        <CustomDiv>\n            <LoginForm/>\n        </CustomDiv>\n    );\n}\n\n//SSR 적용 - getServerSidProps 사용\nexport const getServerSideProps = wrapper.getServerSideProps( async (context) => {\n    //Brower 에서 요청이 아닌 Front -> Back이므로 쿠키를 전달해줘야 한다.\n    const cookie = context.req ? context.req.headers.cookie : '';\n    axios.defaults.headers.Cookie = cookie; //요청 헤더에 쿠키 넣기.\n    context.store.dispatch({\n        type: LOAD_MY_INFO_REQUEST,\n    });\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n});\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}