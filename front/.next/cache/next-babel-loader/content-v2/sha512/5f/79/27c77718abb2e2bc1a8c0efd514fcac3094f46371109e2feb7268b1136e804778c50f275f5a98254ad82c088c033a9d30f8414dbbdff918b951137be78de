{"ast":null,"code":"import produce from '../util/produce'; //bucket 더미 데이터\n\nexport var initialState = {\n  bucket: [{\n    id: 1,\n    content: '다 이 어 트'\n  }, {\n    id: 2,\n    content: '적금 일정금액 이상 하기'\n  }, {\n    id: 3,\n    content: '실제 사용할 프로젝트 구상 및 구현하기'\n  }],\n  addBucketLoading: false,\n  addBucketDone: false,\n  addBucketError: null,\n  loadBucketLoading: false,\n  loadBucketDone: false,\n  loadBucketError: null,\n  removeBucketLoading: false,\n  removeBucketDone: false,\n  removeBucketError: null\n};\nexport var LOAD_BUCKET_REQUEST = 'LOAD_BUCKET_REQUEST'; // 액션의 이름\n\nexport var LOAD_BUCKET_SUCCESS = 'LOAD_BUCKET_SUCCESS'; // 액션의 이름\n\nexport var LOAD_BUCKET_FAILURE = 'LOAD_BUCKET_FAILURE'; // 액션의 이름\n\nexport var ADD_BUCKET_REQUEST = 'ADD_BUCKET_REQUEST'; // 액션의 이름\n\nexport var ADD_BUCKET_SUCCESS = 'ADD_BUCKET_SUCCESS'; // 액션의 이름\n\nexport var ADD_BUCKET_FAILURE = 'ADD_BUCKET_FAILURE'; // 액션의 이름\n\nexport var REMOVE_BUCKET_REQUEST = 'REMOVE_BUCKET_REQUEST'; // 액션의 이름\n\nexport var REMOVE_BUCKET_SUCCESS = 'REMOVE_BUCKET_SUCCESS'; // 액션의 이름\n\nexport var REMOVE_BUCKET_FAILURE = 'REMOVE_BUCKET_FAILURE'; // 액션의 이름\n\nexport var LOG_OUT_REQUEST = 'LOG_OUT_REQUEST'; // 액션의 이름\n\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS'; // 액션의 이름\n\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'; // 액션의 이름\n//현재는 REQUEST에서 SUCCESS역활까지 하고있음, saga작성 시 구분하기!\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOAD_BUCKET_REQUEST:\n        {\n          draft.bucket = draft.bucket;\n          break;\n        }\n\n      case LOAD_BUCKET_REQUEST:\n        {\n          draft.loadBucketDone = false;\n          draft.loadBucketLoading = true;\n          draft.loadBucketError = null;\n          break;\n        }\n\n      case LOAD_BUCKET_SUCCESS:\n        {\n          draft.bucket = action.data;\n          draft.loadBucketDone = true;\n          draft.loadBucketLoading = false;\n          break;\n        }\n\n      case LOAD_BUCKET_FAILURE:\n        {\n          draft.loadBucketLoading = false;\n          draft.loadBucketError = action.error;\n        }\n\n      case ADD_BUCKET_REQUEST:\n        {\n          draft.addBucketDone = false;\n          draft.addBucketLoading = true;\n          draft.addBucketError = null;\n          break;\n        }\n\n      case ADD_BUCKET_SUCCESS:\n        {\n          draft.bucket.push(action.data);\n          draft.addBucketDone = true;\n          draft.addBucketLoading = false;\n          break;\n        }\n\n      case ADD_BUCKET_FAILURE:\n        {\n          draft.addBucketLoading = false;\n          draft.addBucketError = action.error;\n        }\n\n      case REMOVE_BUCKET_REQUEST:\n        {\n          draft.removeBucketDone = false;\n          draft.removeBucketLoading = true;\n          draft.removeBucketError = null;\n          break;\n        }\n\n      case REMOVE_BUCKET_SUCCESS:\n        {\n          draft.bucket = draft.bucket.filter(function (v) {\n            return v.id !== action.data.id;\n          });\n          draft.removeBucketDone = true;\n          draft.removeBucketLoading = false;\n          break;\n        }\n\n      case REMOVE_BUCKET_FAILURE:\n        {\n          draft.removeBucketLoading = false;\n          draft.removeBucketError = action.error;\n        }\n\n      case LOG_OUT_REQUEST:\n        {\n          console.log(\"LOG_OUT_REQUEST\"); //draft.bucket = null;\n\n          break;\n        }\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/sol/google/Project/SolarSeed/front/reducers/bucket.js"],"names":["produce","initialState","bucket","id","content","addBucketLoading","addBucketDone","addBucketError","loadBucketLoading","loadBucketDone","loadBucketError","removeBucketLoading","removeBucketDone","removeBucketError","LOAD_BUCKET_REQUEST","LOAD_BUCKET_SUCCESS","LOAD_BUCKET_FAILURE","ADD_BUCKET_REQUEST","ADD_BUCKET_SUCCESS","ADD_BUCKET_FAILURE","REMOVE_BUCKET_REQUEST","REMOVE_BUCKET_SUCCESS","REMOVE_BUCKET_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","reducer","state","action","draft","type","data","error","push","filter","v","console","log"],"mappings":"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","sourcesContent":["import produce from '../util/produce';\n\n//bucket 더미 데이터\n\n\nexport const initialState = {\n    bucket: [{\n        id: 1,\n        content: '다 이 어 트'\n    }, {\n        id: 2,\n        content: '적금 일정금액 이상 하기'\n    }, {\n        id: 3,\n        content: '실제 사용할 프로젝트 구상 및 구현하기'\n    }],\n\n    addBucketLoading: false,\n    addBucketDone: false,\n    addBucketError: null,\n\n    loadBucketLoading: false,\n    loadBucketDone: false,\n    loadBucketError: null,\n\n    removeBucketLoading: false,\n    removeBucketDone: false,\n    removeBucketError: null,\n};\n\nexport const LOAD_BUCKET_REQUEST = 'LOAD_BUCKET_REQUEST'; // 액션의 이름\nexport const LOAD_BUCKET_SUCCESS = 'LOAD_BUCKET_SUCCESS'; // 액션의 이름\nexport const LOAD_BUCKET_FAILURE = 'LOAD_BUCKET_FAILURE'; // 액션의 이름\n\nexport const ADD_BUCKET_REQUEST = 'ADD_BUCKET_REQUEST'; // 액션의 이름\nexport const ADD_BUCKET_SUCCESS = 'ADD_BUCKET_SUCCESS'; // 액션의 이름\nexport const ADD_BUCKET_FAILURE = 'ADD_BUCKET_FAILURE'; // 액션의 이름\n\nexport const REMOVE_BUCKET_REQUEST = 'REMOVE_BUCKET_REQUEST'; // 액션의 이름\nexport const REMOVE_BUCKET_SUCCESS = 'REMOVE_BUCKET_SUCCESS'; // 액션의 이름\nexport const REMOVE_BUCKET_FAILURE = 'REMOVE_BUCKET_FAILURE'; // 액션의 이름\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST'; // 액션의 이름\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS'; // 액션의 이름\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'; // 액션의 이름\n//현재는 REQUEST에서 SUCCESS역활까지 하고있음, saga작성 시 구분하기!\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\n    switch(action.type){\n        case LOAD_BUCKET_REQUEST: {\n            draft.bucket = draft.bucket;\n            break;\n        }\n        case LOAD_BUCKET_REQUEST: {\n            draft.loadBucketDone = false;\n            draft.loadBucketLoading = true;\n            draft.loadBucketError = null;\n            break;\n        }\n        case LOAD_BUCKET_SUCCESS: {\n            draft.bucket = action.data;\n            draft.loadBucketDone = true;\n            draft.loadBucketLoading = false;\n            break;\n        }\n        case LOAD_BUCKET_FAILURE: {\n            draft.loadBucketLoading = false;\n            draft.loadBucketError = action.error;\n        }\n        case ADD_BUCKET_REQUEST: {\n            draft.addBucketDone = false;\n            draft.addBucketLoading = true;\n            draft.addBucketError = null;\n            break;\n        }\n        case ADD_BUCKET_SUCCESS: {\n            draft.bucket.push(action.data);\n            draft.addBucketDone = true;\n            draft.addBucketLoading = false;\n            break;\n        }\n        case ADD_BUCKET_FAILURE: {\n            draft.addBucketLoading = false;\n            draft.addBucketError = action.error;\n        }\n        case REMOVE_BUCKET_REQUEST: {\n            draft.removeBucketDone = false;\n            draft.removeBucketLoading = true;\n            draft.removeBucketError = null;\n            break;\n        }\n        case REMOVE_BUCKET_SUCCESS: {\n            draft.bucket = draft.bucket.filter((v) => v.id !== action.data.id);\n            draft.removeBucketDone = true;\n            draft.removeBucketLoading = false;\n            break;\n        }\n        case REMOVE_BUCKET_FAILURE: {\n            draft.removeBucketLoading = false;\n            draft.removeBucketError = action.error;\n        }\n        case LOG_OUT_REQUEST:{\n            console.log(\"LOG_OUT_REQUEST\");\n            //draft.bucket = null;\n            break;\n        }\n    }\n})\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}