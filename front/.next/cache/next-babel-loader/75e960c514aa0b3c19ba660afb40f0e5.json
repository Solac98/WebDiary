{"ast":null,"code":"import { Router } from 'next/router';\nimport produce from '../util/produce'; //user 더미 데이터\n\nvar dummyUser = {\n  id: 1,\n  nickname: 'Solac'\n};\nexport var initialState = {\n  isLoggedIn: false,\n  // Log or Not Log\n  isLogLoading: false,\n  // Login Lodaing\n  isLogError: null,\n  //LogIn Error\n  isSignUpDone: false,\n  // Sign Up Done\n  isSignUpLoading: false,\n  // Sign Up Loading\n  isSignUpError: null,\n  // Sign Up Error\n  user: null // User Info\n\n};\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST'; // 액션의 이름\n\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\n\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\n\nexport var LOG_OUT_REQUEST = 'LOG_OUT_REQUEST'; // 액션의 이름\n\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS'; // 액션의 이름\n\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'; // 액션의 이름\n\nexport var SIGN_UP_REQUEST = 'SIGN_UP_REQUEST'; // 액션의 이름\n\nexport var SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS'; // 액션의 이름\n\nexport var SIGN_UP_FAILURE = 'SIGN_UP_FAILURE'; // 액션의 이름\n\nexport var SIGN_UP_RESET = 'SIGN_UP_RESET'; // 액션의 이름\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      // Login\n      case LOG_IN_REQUEST:\n        {\n          draft.isLogLoading = true; // LogIn Loading On\n\n          break;\n        }\n\n      case LOG_IN_SUCCESS:\n        {\n          draft.isLogLoading = false; //LogIn Loading Off\n\n          draft.isLoggedIn = true; //LogIn Done\n\n          draft.user = action.data; // UserData Insert\n\n          break;\n        }\n\n      case LOG_IN_FAILURE:\n        {\n          draft.isLogLoading = false; //LogIn Loading Off\n\n          draft.isLogError = action.error; // Error Insert\n\n          break;\n        }\n      // Logout\n\n      case LOG_OUT_REQUEST:\n        {\n          draft.isLogLoading = true; // LogIn Loading On\n\n          break;\n        }\n\n      case LOG_OUT_SUCCESS:\n        {\n          draft.isLogLoading = false; //LogIn Loading Off\n\n          draft.isLoggedIn = false; //LogIn Done\n\n          draft.user = null; // UserData Insert\n\n          break;\n        }\n\n      case LOG_OUT_FAILURE:\n        {\n          draft.isLogLoading = false; //LogIn Loading Off\n\n          draft.isLogError = action.data; // Error Insert\n\n          break;\n        }\n      // Sign Up\n\n      case SIGN_UP_REQUEST:\n        {\n          draft.isSignUpLoading = true; // SignUp Loading On\n\n          draft.isSignUpError = null; // SignUp Error Null\n\n          break;\n        }\n\n      case SIGN_UP_SUCCESS:\n        {\n          draft.isSignUpDone = true; // SignUp Done On\n\n          draft.isSignUpLoading = false; //SignUp Loading Off\n\n          break;\n        }\n\n      case SIGN_UP_FAILURE:\n        {\n          draft.isSignUpLoading = false; //SignUp Loading Off\n\n          draft.isSignUpError = action.error; // Error Insert\n\n          break;\n        }\n\n      case SIGN_UP_RESET:\n        {\n          draft.isSignUpDone = false; //SignUp Done Null\n\n          break;\n        }\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/sol/google/Project/SolarSeed/front/reducers/user.js"],"names":["Router","produce","dummyUser","id","nickname","initialState","isLoggedIn","isLogLoading","isLogError","isSignUpDone","isSignUpLoading","isSignUpError","user","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_RESET","reducer","state","action","draft","type","data","error"],"mappings":"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","sourcesContent":["import { Router } from 'next/router';\nimport produce from '../util/produce';\n\n//user 더미 데이터\nconst dummyUser = {\n    id: 1,\n    nickname: 'Solac',\n  };\n\n  export const initialState = {\n      isLoggedIn: false,// Log or Not Log\n      isLogLoading: false, // Login Lodaing\n      isLogError: null, //LogIn Error\n      isSignUpDone: false, // Sign Up Done\n      isSignUpLoading: false,// Sign Up Loading\n      isSignUpError: null,// Sign Up Error\n\n      user: null,// User Info\n  };\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'; // 액션의 이름\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST'; // 액션의 이름\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS'; // 액션의 이름\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'; // 액션의 이름\n\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST'; // 액션의 이름\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS'; // 액션의 이름\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE'; // 액션의 이름\nexport const SIGN_UP_RESET = 'SIGN_UP_RESET'; // 액션의 이름\n\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\n    switch(action.type){\n        // Login\n        case LOG_IN_REQUEST:{\n            draft.isLogLoading = true; // LogIn Loading On\n            break;\n        }\n        case LOG_IN_SUCCESS: {\n            draft.isLogLoading = false; //LogIn Loading Off\n            draft.isLoggedIn = true; //LogIn Done\n            draft.user = action.data; // UserData Insert\n            break;\n        }\n        case LOG_IN_FAILURE: {\n            draft.isLogLoading = false; //LogIn Loading Off\n            draft.isLogError = action.error;// Error Insert\n            break;\n        }\n        // Logout\n        case LOG_OUT_REQUEST:{\n            draft.isLogLoading = true; // LogIn Loading On\n            break;\n        }\n        case LOG_OUT_SUCCESS: {\n            draft.isLogLoading = false; //LogIn Loading Off\n            draft.isLoggedIn = false; //LogIn Done\n            draft.user = null; // UserData Insert\n            break;\n        }\n        case LOG_OUT_FAILURE: {\n            draft.isLogLoading = false; //LogIn Loading Off\n            draft.isLogError = action.data;// Error Insert\n            break;\n        }\n        // Sign Up\n        case SIGN_UP_REQUEST:{\n            draft.isSignUpLoading = true; // SignUp Loading On\n            draft.isSignUpError = null; // SignUp Error Null\n            break;\n        }\n        case SIGN_UP_SUCCESS: {\n            draft.isSignUpDone = true; // SignUp Done On\n            draft.isSignUpLoading = false; //SignUp Loading Off\n            break;\n        }\n        case SIGN_UP_FAILURE: {\n            draft.isSignUpLoading = false; //SignUp Loading Off\n            draft.isSignUpError = action.error;// Error Insert\n            break;\n        }\n        case SIGN_UP_RESET: {\n            draft.isSignUpDone = false; //SignUp Done Null\n            break;\n        }\n    }\n})\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}